{"ast":null,"code":"var _jsxFileName = \"/Users/selasie/Documents/GitHub/dex_ui/swap-ui/tzstats/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { Button, Grid, makeStyles } from \"@material-ui/core\";\nimport { TokenListProvider } from \"@solana/spl-token-registry\";\nimport Swap from \"@project-serum/swap-ui\";\nimport \"./App.css\"; // App illustrating the use of the Swap component.\n//\n// One needs to just provide an Anchor `Provider` and a `TokenListContainer`\n// to the `Swap` component, and then everything else is taken care of.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(AppInner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 7\n  }, this);\n}\n\n_c = App;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    minHeight: \"100vh\",\n    paddingLeft: theme.spacing(1),\n    paddingRight: theme.spacing(1),\n    background: \"#101535\"\n  }\n}));\n\nfunction AppInner() {\n  _s();\n\n  const styles = useStyles();\n  const [isConnected, setIsConnected] = useState(false);\n  const [tokenList, setTokenList] = useState(null);\n  useEffect(() => {\n    new TokenListProvider().resolve().then(setTokenList);\n  }, [setTokenList]);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    justify: \"center\",\n    alignItems: \"center\",\n    className: styles.root,\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      style: {\n        position: \"fixed\",\n        color: \"white\",\n        right: 24,\n        top: 24\n      },\n      children: !isConnected ? \"Connect\" : \"Disconnect\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), tokenList && /*#__PURE__*/_jsxDEV(Swap, {\n      tokenList: tokenList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AppInner, \"P9l2C/B/hwQBxo0RsfLBZbjj3NU=\", false, function () {\n  return [useStyles];\n});\n\n_c2 = AppInner;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"AppInner\");","map":{"version":3,"sources":["/Users/selasie/Documents/GitHub/dex_ui/swap-ui/tzstats/src/App.tsx"],"names":["useState","useEffect","Button","Grid","makeStyles","TokenListProvider","Swap","App","useStyles","theme","root","minHeight","paddingLeft","spacing","paddingRight","background","AppInner","styles","isConnected","setIsConnected","tokenList","setTokenList","resolve","then","position","color","right","top"],"mappings":";;;AACA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,UAAvB,QAAyC,mBAAzC;AAEA,SAEEC,iBAFF,QAGO,4BAHP;AAIA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAO,WAAP,C,CAEA;AACA;AACA;AACA;;;;AAEA,SAASC,GAAT,GAAe;AACb,sBAEI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,UAFJ;AAID;;KALQA,G;AAOT,MAAMC,SAAS,GAAGJ,UAAU,CAAEK,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,SAAS,EAAE,OADP;AAEJC,IAAAA,WAAW,EAAEH,KAAK,CAACI,OAAN,CAAc,CAAd,CAFT;AAGJC,IAAAA,YAAY,EAAEL,KAAK,CAACI,OAAN,CAAc,CAAd,CAHV;AAIJE,IAAAA,UAAU,EAAE;AAJR;AADiC,CAAZ,CAAD,CAA5B;;AASA,SAASC,QAAT,GAAoB;AAAA;;AAClB,QAAMC,MAAM,GAAGT,SAAS,EAAxB;AACA,QAAM,CAACU,WAAD,EAAcC,cAAd,IAAgCnB,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACoB,SAAD,EAAYC,YAAZ,IAA4BrB,QAAQ,CAA4B,IAA5B,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAII,iBAAJ,GAAwBiB,OAAxB,GAAkCC,IAAlC,CAAuCF,YAAvC;AACD,GAFQ,EAEN,CAACA,YAAD,CAFM,CAAT;AAMA,sBACE,QAAC,IAAD;AACE,IAAA,SAAS,MADX;AAEE,IAAA,OAAO,EAAC,QAFV;AAGE,IAAA,UAAU,EAAC,QAHb;AAIE,IAAA,SAAS,EAAEJ,MAAM,CAACP,IAJpB;AAAA,4BAME,QAAC,MAAD;AACE,MAAA,OAAO,EAAC,UADV;AAEE,MAAA,KAAK,EAAE;AAAEc,QAAAA,QAAQ,EAAE,OAAZ;AAAqBC,QAAAA,KAAK,EAAE,OAA5B;AAAqCC,QAAAA,KAAK,EAAE,EAA5C;AAAgDC,QAAAA,GAAG,EAAE;AAArD,OAFT;AAAA,gBAIG,CAACT,WAAD,GAAe,SAAf,GAA2B;AAJ9B;AAAA;AAAA;AAAA;AAAA,YANF,EAYGE,SAAS,iBAAI,QAAC,IAAD;AAAM,MAAA,SAAS,EAAEA;AAAjB;AAAA;AAAA;AAAA;AAAA,YAZhB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;GA3BQJ,Q;UACQR,S;;;MADRQ,Q;AA6BT,eAAeT,GAAf","sourcesContent":["\nimport { useState, useEffect } from \"react\";\nimport { SnackbarProvider, } from \"notistack\";\nimport { Button, Grid, makeStyles } from \"@material-ui/core\";\n\nimport {\n  TokenListContainer,\n  TokenListProvider,\n} from \"@solana/spl-token-registry\";\nimport Swap from \"@project-serum/swap-ui\";\nimport \"./App.css\";\n\n// App illustrating the use of the Swap component.\n//\n// One needs to just provide an Anchor `Provider` and a `TokenListContainer`\n// to the `Swap` component, and then everything else is taken care of.\n\nfunction App() {\n  return (\n    \n      <AppInner />\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    minHeight: \"100vh\",\n    paddingLeft: theme.spacing(1),\n    paddingRight: theme.spacing(1),\n    background: \"#101535\"\n  },\n}));\n\nfunction AppInner() {\n  const styles = useStyles();\n  const [isConnected, setIsConnected] = useState(false);\n  const [tokenList, setTokenList] = useState<TokenListContainer | null>(null);\n\n  useEffect(() => {\n    new TokenListProvider().resolve().then(setTokenList);\n  }, [setTokenList]);\n\n\n  \n  return (\n    <Grid\n      container\n      justify=\"center\"\n      alignItems=\"center\"\n      className={styles.root}\n    >\n      <Button\n        variant=\"outlined\"\n        style={{ position: \"fixed\", color: \"white\", right: 24, top: 24 }}\n      >\n        {!isConnected ? \"Connect\" : \"Disconnect\"}\n      </Button>\n      {tokenList && <Swap tokenList={tokenList} />}\n    </Grid>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}