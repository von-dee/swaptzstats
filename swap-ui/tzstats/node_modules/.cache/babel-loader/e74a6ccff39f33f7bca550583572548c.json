{"ast":null,"code":"var _jsxFileName = \"/Users/selasie/Documents/GitHub/dex_ui/swap-ui/src/components/Swap.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$(),\n    _s5 = $RefreshSig$(),\n    _s6 = $RefreshSig$(),\n    _s7 = $RefreshSig$(),\n    _s8 = $RefreshSig$(),\n    _s9 = $RefreshSig$();\n\nimport { useState } from \"react\"; // import {\n//   PublicKey,\n//   Keypair,\n//   Transaction,\n//   SystemProgram,\n//   Signer,\n// } from \"@solana/web3.js\";\n\nimport { Token, TOKEN_PROGRAM_ID } from \"@solana/spl-token\";\nimport { BN } from \"@project-serum/anchor\";\nimport { makeStyles, Card, Button, Typography, TextField, useTheme } from \"@material-ui/core\";\nimport { ImportExportRounded } from \"@material-ui/icons\";\nimport { useSwapContext, useSwapFair } from \"../context/Swap\";\nimport { useDexContext, useOpenOrders, useRouteVerbose, useMarket, FEE_MULTIPLIER } from \"../context/Dex\";\nimport { useTokenMap } from \"../context/TokenList\";\nimport { useMint, useOwnedTokenAccount } from \"../context/Token\";\nimport { useCanSwap, useReferral } from \"../context/Swap\";\nimport TokenDialog from \"./TokenDialog\";\nimport { SettingsButton } from \"./Settings\";\nimport { InfoLabel } from \"./Info\";\nimport { SOL_MINT, WRAPPED_SOL_MINT } from \"../utils/pubkeys\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  card: {\n    width: theme.spacing(50),\n    borderRadius: theme.spacing(2),\n    background: \"#22242a\",\n    border: \"1px solid #aaaaaa36\",\n    color: \"white !important\",\n    boxShadow: \"0px 0px 30px 5px rgba(0,0,0,0.075)\",\n    padding: theme.spacing(2)\n  },\n  tab: {\n    width: \"50%\"\n  },\n  settingsButton: {\n    padding: 0\n  },\n  swapButton: {\n    width: \"100%\",\n    textTransform: \"capitalize\",\n    borderRadius: theme.spacing(2),\n    backgroundColor: \"#323741\",\n    color: \"white !important\",\n    fontSize: 16,\n    fontWeight: 700,\n    padding: theme.spacing(1.5)\n  },\n  swapToFromButton: {\n    display: \"block\",\n    margin: \"5px auto 5px auto\",\n    cursor: \"pointer\"\n  },\n  amountInput: {\n    fontSize: 22,\n    fontWeight: 600,\n    color: \"white !important\"\n  },\n  input: {\n    textAlign: \"left\",\n    color: \"white !important\"\n  },\n  swapTokenFormContainer: {\n    borderRadius: theme.spacing(2),\n    boxShadow: \"0px 0px 15px 2px rgba(33,150,243,0.1)\",\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    background: \"#323741\",\n    padding: \"5px 10px 5px 15px\",\n    border: \"1px solid #ffffff1c\"\n  },\n  swapTokenSelectorContainer: {\n    marginLeft: theme.spacing(1),\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    flexDirection: \"column\",\n    width: \"30%\"\n  },\n  balanceContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: \"2px 0px\",\n    fontSize: \"12px\",\n    color: \"#bebebe\"\n  },\n  maxButton: {\n    marginLeft: theme.spacing(1),\n    color: theme.palette.primary.main,\n    fontWeight: 700,\n    fontSize: \"12px\",\n    cursor: \"pointer\"\n  },\n  tokenButton: {\n    display: \"flex\",\n    alignItems: \"center\",\n    cursor: \"pointer\",\n    marginBottom: theme.spacing(1),\n    border: \"1px solid #585858\",\n    borderRadius: \"20px\",\n    background: \"#161616\"\n  }\n}));\nexport default function SwapCard({\n  containerStyle,\n  contentStyle,\n  swapTokenContainerStyle\n}) {\n  _s();\n\n  const styles = useStyles();\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: styles.card,\n    style: containerStyle,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: contentStyle,\n      children: [/*#__PURE__*/_jsxDEV(SwapFromForm, {\n        style: swapTokenContainerStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ArrowButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SwapToForm, {\n        style: swapTokenContainerStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InfoLabel, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SwapButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SwapCard, \"3bjLmUB54uhXRX+frDMowQzU8P8=\", false, function () {\n  return [useStyles];\n});\n\n_c = SwapCard;\nexport function SwapHeader() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      marginBottom: \"16px\"\n    },\n    children: /*#__PURE__*/_jsxDEV(SettingsButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 5\n  }, this);\n}\n_c2 = SwapHeader;\nexport function ArrowButton() {\n  _s2();\n\n  const styles = useStyles();\n  const theme = useTheme();\n  const {\n    swapToFromMints\n  } = useSwapContext();\n  return /*#__PURE__*/_jsxDEV(ImportExportRounded, {\n    className: styles.swapToFromButton,\n    fontSize: \"medium\",\n    htmlColor: theme.palette.primary.main,\n    onClick: swapToFromMints\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(ArrowButton, \"0YaKBGMT13tytLGPzdqTPV/oe9o=\", false, function () {\n  return [useStyles, useTheme, useSwapContext];\n});\n\n_c3 = ArrowButton;\n\nfunction SwapFromForm({\n  style\n}) {\n  _s3();\n\n  const {\n    fromMint,\n    setFromMint,\n    fromAmount,\n    setFromAmount\n  } = useSwapContext();\n  return /*#__PURE__*/_jsxDEV(SwapTokenForm, {\n    from: true,\n    style: style,\n    mint: fromMint,\n    setMint: setFromMint,\n    amount: fromAmount,\n    setAmount: setFromAmount\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 5\n  }, this);\n}\n\n_s3(SwapFromForm, \"0/IRyunKdisKxbn8nc7GjqZXJzk=\", false, function () {\n  return [useSwapContext];\n});\n\n_c4 = SwapFromForm;\n\nfunction SwapToForm({\n  style\n}) {\n  _s4();\n\n  const {\n    toMint,\n    setToMint,\n    toAmount,\n    setToAmount\n  } = useSwapContext();\n  return /*#__PURE__*/_jsxDEV(SwapTokenForm, {\n    from: false,\n    style: style,\n    mint: toMint,\n    setMint: setToMint,\n    amount: toAmount,\n    setAmount: setToAmount\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 186,\n    columnNumber: 5\n  }, this);\n}\n\n_s4(SwapToForm, \"R2mbzCYHrFe+N7n+2xgfN+VJDXc=\", false, function () {\n  return [useSwapContext];\n});\n\n_c5 = SwapToForm;\nexport function SwapTokenForm({\n  from,\n  style,\n  mint,\n  setMint,\n  amount,\n  setAmount\n}) {\n  _s5();\n\n  const styles = useStyles();\n  const [showTokenDialog, setShowTokenDialog] = useState(false);\n  const tokenAccount = useOwnedTokenAccount(mint);\n  const mintAccount = useMint(mint);\n  const balance = tokenAccount && mintAccount && tokenAccount.account.amount.toNumber() / 10 ** mintAccount.decimals;\n  const formattedAmount = mintAccount && amount ? amount.toLocaleString(\"fullwide\", {\n    maximumFractionDigits: mintAccount.decimals,\n    useGrouping: false\n  }) : amount;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.swapTokenFormContainer,\n    style: style,\n    children: [/*#__PURE__*/_jsxDEV(TokenDialog, {\n      setMint: setMint,\n      open: showTokenDialog,\n      onClose: () => setShowTokenDialog(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        className: styles.balanceContainer,\n        children: from ? `From` : `To`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        type: \"number\",\n        value: formattedAmount,\n        onChange: e => setAmount(parseFloat(e.target.value)),\n        InputProps: {\n          disableUnderline: true,\n          classes: {\n            root: styles.amountInput,\n            input: styles.input\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.swapTokenSelectorContainer,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        className: styles.balanceContainer,\n        children: [tokenAccount && mintAccount ? `Balance: ${balance === null || balance === void 0 ? void 0 : balance.toFixed(mintAccount.decimals)}` : `Balance : 0.00`, from && !!balance ? /*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles.maxButton,\n          onClick: () => setAmount(balance),\n          children: \"MAX\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TokenButton, {\n        mint: mint,\n        onClick: () => setShowTokenDialog(true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 232,\n    columnNumber: 5\n  }, this);\n}\n\n_s5(SwapTokenForm, \"4glAf9WncsuqoxnZo/07PnnQWPE=\", false, function () {\n  return [useStyles, useOwnedTokenAccount, useMint];\n});\n\n_c6 = SwapTokenForm;\n\nfunction TokenButton({\n  mint,\n  onClick\n}) {\n  _s6();\n\n  const styles = useStyles();\n  const theme = useTheme();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: onClick,\n    className: styles.tokenButton,\n    children: [/*#__PURE__*/_jsxDEV(TokenIcon, {\n      mint: mint,\n      style: {\n        height: theme.spacing(3),\n        paddingLeft: theme.spacing(1)\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TokenName, {\n      mint: mint,\n      style: {\n        fontSize: 14,\n        fontWeight: 700\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 290,\n    columnNumber: 5\n  }, this);\n}\n\n_s6(TokenButton, \"2Aj2+cIPQb6MyCs3+GXB/wqU108=\", false, function () {\n  return [useStyles, useTheme];\n});\n\n_c7 = TokenButton;\nexport function TokenIcon({\n  mint,\n  style\n}) {\n  _s7();\n\n  const tokenMap = useTokenMap();\n  let tokenInfo = tokenMap.get(mint.toString());\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      flexDirection: \"column\",\n      padding: \"5px 5px\"\n    },\n    children: (tokenInfo === null || tokenInfo === void 0 ? void 0 : tokenInfo.logoURI) ? /*#__PURE__*/_jsxDEV(\"img\", {\n      alt: \"Logo\",\n      style: style,\n      src: tokenInfo === null || tokenInfo === void 0 ? void 0 : tokenInfo.logoURI\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: style\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 302,\n    columnNumber: 5\n  }, this);\n}\n\n_s7(TokenIcon, \"CseNJwJS9jgQSujNnEkXJYkyPrg=\", false, function () {\n  return [useTokenMap];\n});\n\n_c8 = TokenIcon;\n\nfunction TokenName({\n  mint,\n  style\n}) {\n  _s8();\n\n  const tokenMap = useTokenMap();\n  const theme = useTheme();\n  let tokenInfo = tokenMap.get(mint.toString());\n  return /*#__PURE__*/_jsxDEV(Typography, {\n    style: {\n      marginLeft: theme.spacing(2),\n      marginRight: theme.spacing(1),\n      ...style\n    },\n    children: tokenInfo === null || tokenInfo === void 0 ? void 0 : tokenInfo.symbol\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 325,\n    columnNumber: 5\n  }, this);\n}\n\n_s8(TokenName, \"tPD7isZZ3fZjhx3ZY977BX01MZ4=\", false, function () {\n  return [useTokenMap, useTheme];\n});\n\n_c9 = TokenName;\nexport function SwapButton() {\n  _s9();\n\n  const styles = useStyles();\n  const {\n    fromMint,\n    toMint,\n    fromAmount,\n    slippage,\n    isClosingNewAccounts,\n    isStrict\n  } = useSwapContext();\n  const {\n    swapClient\n  } = useDexContext();\n  const fromMintInfo = useMint(fromMint);\n  const toMintInfo = useMint(toMint);\n  const openOrders = useOpenOrders();\n  const route = useRouteVerbose(fromMint, toMint);\n  const fromMarket = useMarket(route && route.markets ? route.markets[0] : undefined);\n  const toMarket = useMarket(route && route.markets ? route.markets[1] : undefined);\n  const canSwap = useCanSwap();\n  const referral = useReferral(fromMarket);\n  const fair = useSwapFair();\n  let fromWallet = useOwnedTokenAccount(fromMint);\n  let toWallet = useOwnedTokenAccount(toMint);\n  const quoteMint = fromMarket && fromMarket.quoteMintAddress;\n  const quoteMintInfo = useMint(quoteMint);\n  const quoteWallet = useOwnedTokenAccount(quoteMint); // Click handler.\n\n  const sendSwapTransaction = async () => {\n    if (!fromMintInfo || !toMintInfo) {\n      throw new Error(\"Unable to calculate mint decimals\");\n    }\n\n    if (!fair) {\n      throw new Error(\"Invalid fair\");\n    }\n\n    if (!quoteMint || !quoteMintInfo) {\n      throw new Error(\"Quote mint not found\");\n    }\n\n    const amount = new BN(fromAmount * 10 ** fromMintInfo.decimals);\n    const isSol = fromMint.equals(SOL_MINT) || toMint.equals(SOL_MINT);\n    const wrappedSolAccount = isSol ? Keypair.generate() : undefined; // Build the swap.\n\n    let txs = await (async () => {\n      if (!fromMarket) {\n        throw new Error(\"Market undefined\");\n      }\n\n      const minExchangeRate = {\n        rate: new BN(10 ** toMintInfo.decimals * FEE_MULTIPLIER / fair).muln(100 - slippage).divn(100),\n        fromDecimals: fromMintInfo.decimals,\n        quoteDecimals: quoteMintInfo.decimals,\n        strict: isStrict\n      };\n      const fromOpenOrders = fromMarket ? openOrders.get(fromMarket === null || fromMarket === void 0 ? void 0 : fromMarket.address.toString()) : undefined;\n      const toOpenOrders = toMarket ? openOrders.get(toMarket === null || toMarket === void 0 ? void 0 : toMarket.address.toString()) : undefined;\n      const fromWalletAddr = fromMint.equals(SOL_MINT) ? wrappedSolAccount.publicKey : fromWallet ? fromWallet.publicKey : undefined;\n      const toWalletAddr = toMint.equals(SOL_MINT) ? wrappedSolAccount.publicKey : toWallet ? toWallet.publicKey : undefined;\n      return await swapClient.swapTxs({\n        fromMint,\n        toMint,\n        quoteMint,\n        amount,\n        minExchangeRate,\n        referral,\n        fromMarket,\n        toMarket,\n        // Automatically created if undefined.\n        fromOpenOrders: fromOpenOrders ? fromOpenOrders[0].address : undefined,\n        toOpenOrders: toOpenOrders ? toOpenOrders[0].address : undefined,\n        fromWallet: fromWalletAddr,\n        toWallet: toWalletAddr,\n        quoteWallet: quoteWallet ? quoteWallet.publicKey : undefined,\n        // Auto close newly created open orders accounts.\n        close: isClosingNewAccounts\n      });\n    })(); // If swapping SOL, then insert a wrap/unwrap instruction.\n\n    if (isSol) {\n      if (txs.length > 1) {\n        throw new Error(\"SOL must be swapped in a single transaction\");\n      } // const { tx: wrapTx, signers: wrapSigners } = await wrapSol(\n      //   swapClient.program.provider,\n      //   wrappedSolAccount as Keypair,\n      //   fromMint,\n      //   amount\n      // );\n      // const { tx: unwrapTx, signers: unwrapSigners } = unwrapSol(\n      //   swapClient.program.provider,\n      //   wrappedSolAccount as Keypair\n      // );\n      // const tx = new Transaction();\n      // tx.add(wrapTx);\n      // tx.add(txs[0].tx);\n      // tx.add(unwrapTx);\n      // txs[0].tx = tx;\n      // txs[0].signers.push(...wrapSigners);\n      // txs[0].signers.push(...unwrapSigners);\n\n    }\n\n    await swapClient.program.provider.sendAll(txs);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Button, {\n    variant: \"contained\",\n    className: styles.swapButton,\n    onClick: sendSwapTransaction // disabled={!canSwap}\n    ,\n    children: canSwap ? `Swap` : `Connect Wallet`\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 461,\n    columnNumber: 5\n  }, this);\n}\n\n_s9(SwapButton, \"+PImLrYf2hCBe2NbyMcsGwbER/Y=\", false, function () {\n  return [useStyles, useSwapContext, useDexContext, useMint, useMint, useOpenOrders, useRouteVerbose, useMarket, useMarket, useCanSwap, useReferral, useSwapFair, useOwnedTokenAccount, useOwnedTokenAccount, useMint, useOwnedTokenAccount];\n});\n\n_c10 = SwapButton;\n\nasync function wrapSol(provider, wrappedSolAccount, fromMint, amount) {\n  const tx = new Transaction();\n  const signers = [wrappedSolAccount]; // Create new, rent exempt account.\n\n  tx.add(SystemProgram.createAccount({\n    fromPubkey: provider.wallet.publicKey,\n    newAccountPubkey: wrappedSolAccount.publicKey,\n    lamports: await Token.getMinBalanceRentForExemptAccount(provider.connection),\n    space: 165,\n    programId: TOKEN_PROGRAM_ID\n  })); // Transfer lamports. These will be converted to an SPL balance by the\n  // token program.\n\n  if (fromMint.equals(SOL_MINT)) {\n    tx.add(SystemProgram.transfer({\n      fromPubkey: provider.wallet.publicKey,\n      toPubkey: wrappedSolAccount.publicKey,\n      lamports: amount.toNumber()\n    }));\n  } // Initialize the account.\n\n\n  tx.add(Token.createInitAccountInstruction(TOKEN_PROGRAM_ID, WRAPPED_SOL_MINT, wrappedSolAccount.publicKey, provider.wallet.publicKey));\n  return {\n    tx,\n    signers\n  };\n}\n\nfunction unwrapSol(provider, wrappedSolAccount) {\n  const tx = new Transaction();\n  tx.add(Token.createCloseAccountInstruction(TOKEN_PROGRAM_ID, wrappedSolAccount.publicKey, provider.wallet.publicKey, provider.wallet.publicKey, []));\n  return {\n    tx,\n    signers: []\n  };\n}\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10;\n\n$RefreshReg$(_c, \"SwapCard\");\n$RefreshReg$(_c2, \"SwapHeader\");\n$RefreshReg$(_c3, \"ArrowButton\");\n$RefreshReg$(_c4, \"SwapFromForm\");\n$RefreshReg$(_c5, \"SwapToForm\");\n$RefreshReg$(_c6, \"SwapTokenForm\");\n$RefreshReg$(_c7, \"TokenButton\");\n$RefreshReg$(_c8, \"TokenIcon\");\n$RefreshReg$(_c9, \"TokenName\");\n$RefreshReg$(_c10, \"SwapButton\");","map":{"version":3,"sources":["/Users/selasie/Documents/GitHub/dex_ui/swap-ui/src/components/Swap.tsx"],"names":["useState","Token","TOKEN_PROGRAM_ID","BN","makeStyles","Card","Button","Typography","TextField","useTheme","ImportExportRounded","useSwapContext","useSwapFair","useDexContext","useOpenOrders","useRouteVerbose","useMarket","FEE_MULTIPLIER","useTokenMap","useMint","useOwnedTokenAccount","useCanSwap","useReferral","TokenDialog","SettingsButton","InfoLabel","SOL_MINT","WRAPPED_SOL_MINT","useStyles","theme","card","width","spacing","borderRadius","background","border","color","boxShadow","padding","tab","settingsButton","swapButton","textTransform","backgroundColor","fontSize","fontWeight","swapToFromButton","display","margin","cursor","amountInput","input","textAlign","swapTokenFormContainer","justifyContent","swapTokenSelectorContainer","marginLeft","flexDirection","balanceContainer","alignItems","maxButton","palette","primary","main","tokenButton","marginBottom","SwapCard","containerStyle","contentStyle","swapTokenContainerStyle","styles","SwapHeader","ArrowButton","swapToFromMints","SwapFromForm","style","fromMint","setFromMint","fromAmount","setFromAmount","SwapToForm","toMint","setToMint","toAmount","setToAmount","SwapTokenForm","from","mint","setMint","amount","setAmount","showTokenDialog","setShowTokenDialog","tokenAccount","mintAccount","balance","account","toNumber","decimals","formattedAmount","toLocaleString","maximumFractionDigits","useGrouping","e","parseFloat","target","value","disableUnderline","classes","root","toFixed","TokenButton","onClick","height","paddingLeft","TokenIcon","tokenMap","tokenInfo","get","toString","logoURI","TokenName","marginRight","symbol","SwapButton","slippage","isClosingNewAccounts","isStrict","swapClient","fromMintInfo","toMintInfo","openOrders","route","fromMarket","markets","undefined","toMarket","canSwap","referral","fair","fromWallet","toWallet","quoteMint","quoteMintAddress","quoteMintInfo","quoteWallet","sendSwapTransaction","Error","isSol","equals","wrappedSolAccount","Keypair","generate","txs","minExchangeRate","rate","muln","divn","fromDecimals","quoteDecimals","strict","fromOpenOrders","address","toOpenOrders","fromWalletAddr","publicKey","toWalletAddr","swapTxs","close","length","program","provider","sendAll","wrapSol","tx","Transaction","signers","add","SystemProgram","createAccount","fromPubkey","wallet","newAccountPubkey","lamports","getMinBalanceRentForExemptAccount","connection","space","programId","transfer","toPubkey","createInitAccountInstruction","unwrapSol","createCloseAccountInstruction"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\n// import {\n//   PublicKey,\n//   Keypair,\n//   Transaction,\n//   SystemProgram,\n//   Signer,\n// } from \"@solana/web3.js\";\nimport { Token, TOKEN_PROGRAM_ID } from \"@solana/spl-token\";\nimport { BN, Provider } from \"@project-serum/anchor\";\nimport {\n  makeStyles,\n  Card,\n  Button,\n  Typography,\n  TextField,\n  useTheme,\n} from \"@material-ui/core\";\nimport { ExpandMore, ImportExportRounded } from \"@material-ui/icons\";\nimport { useSwapContext, useSwapFair } from \"../context/Swap\";\nimport {\n  useDexContext,\n  useOpenOrders,\n  useRouteVerbose,\n  useMarket,\n  FEE_MULTIPLIER,\n} from \"../context/Dex\";\nimport { useTokenMap } from \"../context/TokenList\";\nimport { useMint, useOwnedTokenAccount } from \"../context/Token\";\nimport { useCanSwap, useReferral } from \"../context/Swap\";\nimport TokenDialog from \"./TokenDialog\";\nimport { SettingsButton } from \"./Settings\";\nimport { InfoLabel } from \"./Info\";\nimport { SOL_MINT, WRAPPED_SOL_MINT } from \"../utils/pubkeys\";\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    width: theme.spacing(50),\n    borderRadius: theme.spacing(2),\n    background: \"#22242a\",\n    border: \"1px solid #aaaaaa36\",\n    color: \"white !important\",\n    boxShadow: \"0px 0px 30px 5px rgba(0,0,0,0.075)\",\n    padding: theme.spacing(2),\n  },\n  tab: {\n    width: \"50%\",\n  },\n  settingsButton: {\n    padding: 0,\n  },\n  swapButton: {\n    width: \"100%\",\n    textTransform: \"capitalize\",\n    borderRadius: theme.spacing(2),\n    backgroundColor: \"#323741\",\n    color: \"white !important\",\n    fontSize: 16,\n    fontWeight: 700,\n    padding: theme.spacing(1.5),\n  },\n  swapToFromButton: {\n    display: \"block\",\n    margin: \"5px auto 5px auto\",\n    cursor: \"pointer\",\n  },\n  amountInput: {\n    fontSize: 22,\n    fontWeight: 600,\n    color: \"white !important\"\n  },\n  input: {\n    textAlign: \"left\",\n    color: \"white !important\"\n  },\n  swapTokenFormContainer: {\n    borderRadius: theme.spacing(2),\n    boxShadow: \"0px 0px 15px 2px rgba(33,150,243,0.1)\",\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    background: \"#323741\",\n    padding: \"5px 10px 5px 15px\",\n    border: \"1px solid #ffffff1c\"\n  },\n  swapTokenSelectorContainer: {\n    marginLeft: theme.spacing(1),\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    flexDirection: \"column\",\n    width: \"30%\",\n  },\n  balanceContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: \"2px 0px\",\n    fontSize: \"12px\",\n    color: \"#bebebe\"\n  },\n  maxButton: {\n    marginLeft: theme.spacing(1),\n    color: theme.palette.primary.main,\n    fontWeight: 700,\n    fontSize: \"12px\",\n    cursor: \"pointer\",\n  },\n  tokenButton: {\n    display: \"flex\",\n    alignItems: \"center\",\n    cursor: \"pointer\",\n    marginBottom: theme.spacing(1),\n    border: \"1px solid #585858\",\n    borderRadius: \"20px\",\n    background: \"#161616\"\n  },\n}));\n\nexport default function SwapCard({\n  containerStyle,\n  contentStyle,\n  swapTokenContainerStyle,\n}: {\n  containerStyle?: any;\n  contentStyle?: any;\n  swapTokenContainerStyle?: any;\n}) {\n  const styles = useStyles();\n  return (\n    <Card className={styles.card} style={containerStyle}>\n      {/* <SwapHeader /> */}\n      <div style={contentStyle}>\n        <SwapFromForm style={swapTokenContainerStyle} />\n        <ArrowButton />\n        <SwapToForm style={swapTokenContainerStyle} />\n        <InfoLabel />\n        <SwapButton />\n      </div>\n    </Card>\n  );\n}\n\nexport function SwapHeader() {\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        marginBottom: \"16px\",\n      }}\n    >\n      <SettingsButton />\n    </div>\n  );\n}\n\nexport function ArrowButton() {\n  const styles = useStyles();\n  const theme = useTheme();\n  const { swapToFromMints } = useSwapContext();\n  return (\n    <ImportExportRounded\n      className={styles.swapToFromButton}\n      fontSize=\"medium\"\n      htmlColor={theme.palette.primary.main}\n      onClick={swapToFromMints}\n    />\n  );\n}\n\nfunction SwapFromForm({ style }: { style?: any }) {\n  const { fromMint, setFromMint, fromAmount, setFromAmount } = useSwapContext();\n  return (\n    <SwapTokenForm\n      from\n      style={style}\n      mint={fromMint}\n      setMint={setFromMint}\n      amount={fromAmount}\n      setAmount={setFromAmount}\n    />\n  );\n}\n\nfunction SwapToForm({ style }: { style?: any }) {\n  const { toMint, setToMint, toAmount, setToAmount } = useSwapContext();\n  return (\n    <SwapTokenForm\n      from={false}\n      style={style}\n      mint={toMint}\n      setMint={setToMint}\n      amount={toAmount}\n      setAmount={setToAmount}\n    />\n  );\n}\n\nexport function SwapTokenForm({\n  from,\n  style,\n  mint,\n  setMint,\n  amount,\n  setAmount,\n}: {\n  from: boolean;\n  style?: any;\n  mint: any;\n  setMint: (m: any) => void;\n  amount: number;\n  setAmount: (a: number) => void;\n}) {\n  const styles = useStyles();\n\n  const [showTokenDialog, setShowTokenDialog] = useState(false);\n  const tokenAccount = useOwnedTokenAccount(mint);\n  const mintAccount = useMint(mint);\n\n  const balance =\n    tokenAccount &&\n    mintAccount &&\n    tokenAccount.account.amount.toNumber() / 10 ** mintAccount.decimals;\n\n  const formattedAmount =\n    mintAccount && amount\n      ? amount.toLocaleString(\"fullwide\", {\n          maximumFractionDigits: mintAccount.decimals,\n          useGrouping: false,\n        })\n      : amount;\n\n  return (\n    <div className={styles.swapTokenFormContainer} style={style}>\n      \n      <TokenDialog\n        setMint={setMint}\n        open={showTokenDialog}\n        onClose={() => setShowTokenDialog(false)}\n      />\n      <div>\n        <Typography className={styles.balanceContainer}>\n        {from\n            ? `From`\n            : `To`\n        }\n        </Typography>\n        <TextField\n          type=\"number\"\n          value={formattedAmount}\n          onChange={(e) => setAmount(parseFloat(e.target.value))}\n          InputProps={{\n            disableUnderline: true,\n            classes: {\n              root: styles.amountInput,\n              input: styles.input,\n            },\n          }}\n        />\n      </div>\n      <div className={styles.swapTokenSelectorContainer}>\n        <Typography className={styles.balanceContainer}>\n          {tokenAccount && mintAccount\n            ? `Balance: ${balance?.toFixed(mintAccount.decimals)}`\n            : `Balance : 0.00`}\n          {from && !!balance ? (\n            <span\n              className={styles.maxButton}\n              onClick={() => setAmount(balance)}\n            >\n              MAX\n            </span>\n          ) : null}\n        </Typography>\n        <TokenButton mint={mint} onClick={() => setShowTokenDialog(true)} />\n      </div>\n    </div>\n  );\n}\n\nfunction TokenButton({\n  mint,\n  onClick,\n}: {\n  mint: any;\n  onClick: () => void;\n}) {\n  const styles = useStyles();\n  const theme = useTheme();\n\n  return (\n    <div onClick={onClick} className={styles.tokenButton}>\n      <TokenIcon mint={mint} style={{ height: theme.spacing(3), paddingLeft: theme.spacing(1) }} />\n      <TokenName mint={mint} style={{ fontSize: 14, fontWeight: 700 }} />\n      {/* <ExpandMore /> */}\n    </div>\n  );\n}\n\nexport function TokenIcon({ mint, style }: { mint: any; style: any }) {\n  const tokenMap = useTokenMap();\n  let tokenInfo = tokenMap.get(mint.toString());\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        flexDirection: \"column\",\n        padding: \"5px 5px\"\n      }}\n    >\n      {tokenInfo?.logoURI ? (\n        <img alt=\"Logo\" style={style} src={tokenInfo?.logoURI} />\n      ) : (\n        <div style={style}></div>\n      )}\n    </div>\n  );\n}\n\nfunction TokenName({ mint, style }: { mint: any; style: any }) {\n  const tokenMap = useTokenMap();\n  const theme = useTheme();\n  let tokenInfo = tokenMap.get(mint.toString());\n\n  return (\n    <Typography\n      style={{\n        marginLeft: theme.spacing(2),\n        marginRight: theme.spacing(1),\n        ...style,\n      }}\n    >\n      {tokenInfo?.symbol}\n    </Typography>\n  );\n}\n\nexport function SwapButton() {\n  const styles = useStyles();\n  const {\n    fromMint,\n    toMint,\n    fromAmount,\n    slippage,\n    isClosingNewAccounts,\n    isStrict,\n  } = useSwapContext();\n  const { swapClient } = useDexContext();\n  const fromMintInfo = useMint(fromMint);\n  const toMintInfo = useMint(toMint);\n  const openOrders = useOpenOrders();\n  const route = useRouteVerbose(fromMint, toMint);\n  const fromMarket = useMarket(\n    route && route.markets ? route.markets[0] : undefined\n  );\n  const toMarket = useMarket(\n    route && route.markets ? route.markets[1] : undefined\n  );\n  const canSwap = useCanSwap();\n  const referral = useReferral(fromMarket);\n  const fair = useSwapFair();\n  let fromWallet = useOwnedTokenAccount(fromMint);\n  let toWallet = useOwnedTokenAccount(toMint);\n  const quoteMint = fromMarket && fromMarket.quoteMintAddress;\n  const quoteMintInfo = useMint(quoteMint);\n  const quoteWallet = useOwnedTokenAccount(quoteMint);\n\n  // Click handler.\n  const sendSwapTransaction = async () => {\n    if (!fromMintInfo || !toMintInfo) {\n      throw new Error(\"Unable to calculate mint decimals\");\n    }\n    if (!fair) {\n      throw new Error(\"Invalid fair\");\n    }\n    if (!quoteMint || !quoteMintInfo) {\n      throw new Error(\"Quote mint not found\");\n    }\n\n    const amount = new BN(fromAmount * 10 ** fromMintInfo.decimals);\n    const isSol = fromMint.equals(SOL_MINT) || toMint.equals(SOL_MINT);\n    const wrappedSolAccount = isSol ? Keypair.generate() : undefined;\n\n    // Build the swap.\n    let txs = await (async () => {\n      if (!fromMarket) {\n        throw new Error(\"Market undefined\");\n      }\n\n      const minExchangeRate = {\n        rate: new BN((10 ** toMintInfo.decimals * FEE_MULTIPLIER) / fair)\n          .muln(100 - slippage)\n          .divn(100),\n        fromDecimals: fromMintInfo.decimals,\n        quoteDecimals: quoteMintInfo.decimals,\n        strict: isStrict,\n      };\n      const fromOpenOrders = fromMarket\n        ? openOrders.get(fromMarket?.address.toString())\n        : undefined;\n      const toOpenOrders = toMarket\n        ? openOrders.get(toMarket?.address.toString())\n        : undefined;\n      const fromWalletAddr = fromMint.equals(SOL_MINT)\n        ? wrappedSolAccount!.publicKey\n        : fromWallet\n        ? fromWallet.publicKey\n        : undefined;\n      const toWalletAddr = toMint.equals(SOL_MINT)\n        ? wrappedSolAccount!.publicKey\n        : toWallet\n        ? toWallet.publicKey\n        : undefined;\n\n      return await swapClient.swapTxs({\n        fromMint,\n        toMint,\n        quoteMint,\n        amount,\n        minExchangeRate,\n        referral,\n        fromMarket,\n        toMarket,\n        // Automatically created if undefined.\n        fromOpenOrders: fromOpenOrders ? fromOpenOrders[0].address : undefined,\n        toOpenOrders: toOpenOrders ? toOpenOrders[0].address : undefined,\n        fromWallet: fromWalletAddr,\n        toWallet: toWalletAddr,\n        quoteWallet: quoteWallet ? quoteWallet.publicKey : undefined,\n        // Auto close newly created open orders accounts.\n        close: isClosingNewAccounts,\n      });\n    })();\n\n    // If swapping SOL, then insert a wrap/unwrap instruction.\n    if (isSol) {\n      if (txs.length > 1) {\n        throw new Error(\"SOL must be swapped in a single transaction\");\n      }\n      // const { tx: wrapTx, signers: wrapSigners } = await wrapSol(\n      //   swapClient.program.provider,\n      //   wrappedSolAccount as Keypair,\n      //   fromMint,\n      //   amount\n      // );\n      // const { tx: unwrapTx, signers: unwrapSigners } = unwrapSol(\n      //   swapClient.program.provider,\n      //   wrappedSolAccount as Keypair\n      // );\n      // const tx = new Transaction();\n      // tx.add(wrapTx);\n      // tx.add(txs[0].tx);\n      // tx.add(unwrapTx);\n      // txs[0].tx = tx;\n      // txs[0].signers.push(...wrapSigners);\n      // txs[0].signers.push(...unwrapSigners);\n    }\n\n    await swapClient.program.provider.sendAll(txs);\n  };\n  return (\n    <Button\n      variant=\"contained\"\n      className={styles.swapButton}\n      onClick={sendSwapTransaction}\n      // disabled={!canSwap}\n    >\n      {canSwap\n            ? `Swap`\n            : `Connect Wallet`}\n      \n    </Button>\n  );\n}\n\nasync function wrapSol(\n  provider: Provider,\n  wrappedSolAccount: Keypair,\n  fromMint: any,\n  amount: BN\n): Promise<{ tx: Transaction; signers: Array<Signer | undefined> }> {\n  const tx = new Transaction();\n  const signers = [wrappedSolAccount];\n  // Create new, rent exempt account.\n  tx.add(\n    SystemProgram.createAccount({\n      fromPubkey: provider.wallet.publicKey,\n      newAccountPubkey: wrappedSolAccount.publicKey,\n      lamports: await Token.getMinBalanceRentForExemptAccount(\n        provider.connection\n      ),\n      space: 165,\n      programId: TOKEN_PROGRAM_ID,\n    })\n  );\n  // Transfer lamports. These will be converted to an SPL balance by the\n  // token program.\n  if (fromMint.equals(SOL_MINT)) {\n    tx.add(\n      SystemProgram.transfer({\n        fromPubkey: provider.wallet.publicKey,\n        toPubkey: wrappedSolAccount.publicKey,\n        lamports: amount.toNumber(),\n      })\n    );\n  }\n  // Initialize the account.\n  tx.add(\n    Token.createInitAccountInstruction(\n      TOKEN_PROGRAM_ID,\n      WRAPPED_SOL_MINT,\n      wrappedSolAccount.publicKey,\n      provider.wallet.publicKey\n    )\n  );\n  return { tx, signers };\n}\n\nfunction unwrapSol(\n  provider: Provider,\n  wrappedSolAccount: Keypair\n): { tx: Transaction; signers: Array<Signer | undefined> } {\n  const tx = new Transaction();\n  tx.add(\n    Token.createCloseAccountInstruction(\n      TOKEN_PROGRAM_ID,\n      wrappedSolAccount.publicKey,\n      provider.wallet.publicKey,\n      provider.wallet.publicKey,\n      []\n    )\n  );\n  return { tx, signers: [] };\n}\n"]},"metadata":{},"sourceType":"module"}