{"ast":null,"code":"import _classCallCheck from\"/Users/selasie/Documents/GitHub/dex_ui/swap-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/selasie/Documents/GitHub/dex_ui/swap-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _get from\"/Users/selasie/Documents/GitHub/dex_ui/swap-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get\";import _getPrototypeOf from\"/Users/selasie/Documents/GitHub/dex_ui/swap-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/selasie/Documents/GitHub/dex_ui/swap-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/selasie/Documents/GitHub/dex_ui/swap-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import _regeneratorRuntime from\"/Users/selasie/Documents/GitHub/dex_ui/swap-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/selasie/Documents/GitHub/dex_ui/swap-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/selasie/Documents/GitHub/dex_ui/swap-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import\"@fontsource/roboto\";import{useState,useEffect,useMemo}from\"react\";import{SnackbarProvider,useSnackbar}from\"notistack\";import{Button,Grid,makeStyles}from\"@material-ui/core\";import{Provider}from\"@project-serum/anchor\";// @ts-ignore\nimport Wallet from\"@project-serum/sol-wallet-adapter\";import{Connection}from\"@solana/web3.js\";import{TokenListProvider}from\"@solana/spl-token-registry\";import Swap from\"@project-serum/swap-ui\";import\"./App.css\";import tezosTokens from'./data/tezos.tokenlist.json';// App illustrating the use of the Swap component.\n//\n// One needs to just provide an Anchor `Provider` and a `TokenListContainer`\n// to the `Swap` component, and then everything else is taken care of.\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){return/*#__PURE__*/_jsx(SnackbarProvider,{maxSnack:5,autoHideDuration:8000,children:/*#__PURE__*/_jsx(AppInner,{})});}var useStyles=makeStyles(function(theme){return{root:{minHeight:\"100vh\",paddingLeft:theme.spacing(1),paddingRight:theme.spacing(1),background:\"#101535\"}};});function AppInner(){var styles=useStyles();var _useSnackbar=useSnackbar(),enqueueSnackbar=_useSnackbar.enqueueSnackbar;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isConnected=_useState2[0],setIsConnected=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),tokenList=_useState4[0],setTokenList=_useState4[1];var _useMemo=useMemo(function(){var opts={preflightCommitment:\"recent\",commitment:\"recent\"};var network=\"https://solana-api.projectserum.com\";var wallet=new Wallet(\"https://www.sollet.io\",network);var connection=new Connection(network,opts.preflightCommitment);var provider=new NotifyingProvider(connection,wallet,opts,function(tx,err){if(err){enqueueSnackbar(\"Error: \".concat(err.toString()),{variant:\"error\"});}else{enqueueSnackbar(\"Transaction sent\",{variant:\"success\",action:/*#__PURE__*/_jsx(Button,{color:\"inherit\",component:\"a\",target:\"_blank\",rel:\"noopener\",href:\"https://explorer.solana.com/tx/\".concat(tx),children:\"View on Solana Explorer\"})});}});return[provider,wallet];},[enqueueSnackbar]),_useMemo2=_slicedToArray(_useMemo,2),provider=_useMemo2[0],wallet=_useMemo2[1];useEffect(function(){new TokenListProvider().resolve().then(setTokenList);},[setTokenList]);function getToken(){return _getToken.apply(this,arguments);}// Connect to the wallet.\nfunction _getToken(){_getToken=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch('https://raw.githubusercontent.com/von-dee/swaptzstats/main/tezos.tokenlist.json');case 2:response=_context.sent;_context.next=5;return response.json();case 5:data=_context.sent;return _context.abrupt(\"return\",data);case 7:case\"end\":return _context.stop();}}},_callee);}));return _getToken.apply(this,arguments);}useEffect(function(){console.log(\"getToken\");console.log(getToken());wallet.on(\"connect\",function(){enqueueSnackbar(\"Wallet connected\",{variant:\"success\"});setIsConnected(true);});wallet.on(\"disconnect\",function(){enqueueSnackbar(\"Wallet disconnected\",{variant:\"info\"});setIsConnected(false);});},[wallet,enqueueSnackbar]);useEffect(function(){console.log(\"Token Lists\");console.log(tezosTokens);console.log(tokenList);},[tokenList]);return/*#__PURE__*/_jsxs(Grid,{container:true,justify:\"center\",alignItems:\"center\",className:styles.root,children:[/*#__PURE__*/_jsx(Button,{variant:\"outlined\",onClick:function onClick(){return!isConnected?wallet.connect():wallet.disconnect();},style:{position:\"fixed\",color:\"white\",right:24,top:24},children:!isConnected?\"Connect\":\"Disconnect\"}),tokenList&&/*#__PURE__*/_jsx(Swap,{provider:provider,tokenList:tokenList})]});}// Cast wallet to AnchorWallet in order to be compatible with Anchor's Provider class\n// Custom provider to display notifications whenever a transaction is sent.\n//\n// Note that this is an Anchor wallet/network provider--not a React provider,\n// so all transactions will be flowing through here, which allows us to\n// hook in to display all transactions sent from the `Swap` component\n// as notifications in the parent app.\nvar NotifyingProvider=/*#__PURE__*/function(_Provider){_inherits(NotifyingProvider,_Provider);var _super=_createSuper(NotifyingProvider);// Function to call whenever the provider sends a transaction;\nfunction NotifyingProvider(connection,wallet,opts,onTransaction){var _this;_classCallCheck(this,NotifyingProvider);var newWallet=wallet;_this=_super.call(this,connection,newWallet,opts);_this.onTransaction=void 0;_this.onTransaction=onTransaction;return _this;}_createClass(NotifyingProvider,[{key:\"send\",value:function(){var _send=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(tx,signers,opts){var txSig;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return _get(_getPrototypeOf(NotifyingProvider.prototype),\"send\",this).call(this,tx,signers,opts);case 3:txSig=_context2.sent;this.onTransaction(txSig);return _context2.abrupt(\"return\",txSig);case 8:_context2.prev=8;_context2.t0=_context2[\"catch\"](0);if(_context2.t0 instanceof Error||_context2.t0===undefined){this.onTransaction(undefined,_context2.t0);}return _context2.abrupt(\"return\",\"\");case 12:case\"end\":return _context2.stop();}}},_callee2,this,[[0,8]]);}));function send(_x,_x2,_x3){return _send.apply(this,arguments);}return send;}()},{key:\"sendAll\",value:function(){var _sendAll=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(txs,opts){var _this2=this;var txSigs;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;_context3.next=3;return _get(_getPrototypeOf(NotifyingProvider.prototype),\"sendAll\",this).call(this,txs,opts);case 3:txSigs=_context3.sent;txSigs.forEach(function(sig){_this2.onTransaction(sig);});return _context3.abrupt(\"return\",txSigs);case 8:_context3.prev=8;_context3.t0=_context3[\"catch\"](0);if(_context3.t0 instanceof Error||_context3.t0===undefined){this.onTransaction(undefined,_context3.t0);}return _context3.abrupt(\"return\",[]);case 12:case\"end\":return _context3.stop();}}},_callee3,this,[[0,8]]);}));function sendAll(_x4,_x5){return _sendAll.apply(this,arguments);}return sendAll;}()}]);return NotifyingProvider;}(Provider);export default App;","map":{"version":3,"sources":["/Users/selasie/Documents/GitHub/dex_ui/swap-ui/tzstats/src/App.tsx"],"names":["useState","useEffect","useMemo","SnackbarProvider","useSnackbar","Button","Grid","makeStyles","Provider","Wallet","Connection","TokenListProvider","Swap","tezosTokens","App","useStyles","theme","root","minHeight","paddingLeft","spacing","paddingRight","background","AppInner","styles","enqueueSnackbar","isConnected","setIsConnected","tokenList","setTokenList","opts","preflightCommitment","commitment","network","wallet","connection","provider","NotifyingProvider","tx","err","toString","variant","action","resolve","then","getToken","fetch","response","json","data","console","log","on","connect","disconnect","position","color","right","top","onTransaction","newWallet","signers","txSig","Error","undefined","txs","txSigs","forEach","sig"],"mappings":"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","sourcesContent":["import \"@fontsource/roboto\";\nimport { useState, useEffect, useMemo } from \"react\";\nimport { SnackbarProvider, useSnackbar } from \"notistack\";\nimport { Button, Grid, makeStyles } from \"@material-ui/core\";\nimport { Provider } from \"@project-serum/anchor\";\n// @ts-ignore\nimport Wallet from \"@project-serum/sol-wallet-adapter\";\nimport {\n  Signer,\n  ConfirmOptions,\n  Connection,\n  Transaction,\n  TransactionSignature,\n  PublicKey,\n} from \"@solana/web3.js\";\nimport {\n  TokenListContainer,\n  TokenListProvider,\n} from \"@solana/spl-token-registry\";\nimport Swap from \"@project-serum/swap-ui\";\nimport \"./App.css\";\n\nimport tezosTokens from './data/tezos.tokenlist.json';\n\n// App illustrating the use of the Swap component.\n//\n// One needs to just provide an Anchor `Provider` and a `TokenListContainer`\n// to the `Swap` component, and then everything else is taken care of.\nfunction App() {\n  return (\n    <SnackbarProvider maxSnack={5} autoHideDuration={8000}>\n      <AppInner />\n    </SnackbarProvider>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    minHeight: \"100vh\",\n    paddingLeft: theme.spacing(1),\n    paddingRight: theme.spacing(1),\n    background: \"#101535\"\n  },\n}));\n\nfunction AppInner() {\n  const styles = useStyles();\n  const { enqueueSnackbar } = useSnackbar();\n  const [isConnected, setIsConnected] = useState(false);\n  const [tokenList, setTokenList] = useState<TokenListContainer | null>(null);\n\n  const [provider, wallet] = useMemo(() => {\n    const opts: ConfirmOptions = {\n      preflightCommitment: \"recent\",\n      commitment: \"recent\",\n    };\n    const network = \"https://solana-api.projectserum.com\";\n    const wallet = new Wallet(\"https://www.sollet.io\", network);\n    const connection = new Connection(network, opts.preflightCommitment);\n    const provider = new NotifyingProvider(\n      connection,\n      wallet,\n      opts,\n      (tx, err) => {\n        if (err) {\n          enqueueSnackbar(`Error: ${err.toString()}`, {\n            variant: \"error\",\n          });\n        } else {\n          enqueueSnackbar(\"Transaction sent\", {\n            variant: \"success\",\n            action: (\n              <Button\n                color=\"inherit\"\n                component=\"a\"\n                target=\"_blank\"\n                rel=\"noopener\"\n                href={`https://explorer.solana.com/tx/${tx}`}\n              >\n                View on Solana Explorer\n              </Button>\n            ),\n          });\n        }\n      }\n    );\n    return [provider, wallet];\n  }, [enqueueSnackbar]);\n\n  useEffect(() => {\n    new TokenListProvider().resolve().then(setTokenList);\n  }, [setTokenList]);\n\n  async function getToken(){\n    const response = await fetch('https://raw.githubusercontent.com/von-dee/swaptzstats/main/tezos.tokenlist.json');\n    const data = await response.json();\n    return data;\n\n  }\n  // Connect to the wallet.\n  useEffect(() => {\n    \n    console.log(\"getToken\");\n    console.log(getToken());\n\n    \n    wallet.on(\"connect\", () => {\n      enqueueSnackbar(\"Wallet connected\", { variant: \"success\" });\n      setIsConnected(true);\n    });\n    wallet.on(\"disconnect\", () => {\n      enqueueSnackbar(\"Wallet disconnected\", { variant: \"info\" });\n      setIsConnected(false);\n    });\n  }, [wallet, enqueueSnackbar]);\n\n  useEffect(() => {\n    \n    console.log(\"Token Lists\");\n    console.log(tezosTokens);\n    console.log(tokenList);\n\n  },[tokenList])\n  \n  return (\n    <Grid\n      container\n      justify=\"center\"\n      alignItems=\"center\"\n      className={styles.root}\n    >\n      <Button\n        variant=\"outlined\"\n        onClick={() => (!isConnected ? wallet.connect() : wallet.disconnect())}\n        style={{ position: \"fixed\", color: \"white\", right: 24, top: 24 }}\n      >\n        {!isConnected ? \"Connect\" : \"Disconnect\"}\n      </Button>\n      {tokenList && <Swap provider={provider} tokenList={tokenList} />}\n    </Grid>\n  );\n}\n\n// Cast wallet to AnchorWallet in order to be compatible with Anchor's Provider class\ninterface AnchorWallet {\n  signTransaction(tx: Transaction): Promise<Transaction>;\n  signAllTransactions(txs: Transaction[]): Promise<Transaction[]>;\n  publicKey: PublicKey;\n}\n\n// Custom provider to display notifications whenever a transaction is sent.\n//\n// Note that this is an Anchor wallet/network provider--not a React provider,\n// so all transactions will be flowing through here, which allows us to\n// hook in to display all transactions sent from the `Swap` component\n// as notifications in the parent app.\nclass NotifyingProvider extends Provider {\n  // Function to call whenever the provider sends a transaction;\n  private onTransaction: (\n    tx: TransactionSignature | undefined,\n    err?: Error\n  ) => void;\n\n  constructor(\n    connection: Connection,\n    wallet: Wallet,\n    opts: ConfirmOptions,\n    onTransaction: (tx: TransactionSignature | undefined, err?: Error) => void\n  ) {\n    const newWallet = wallet as AnchorWallet;\n    super(connection, newWallet, opts);\n    this.onTransaction = onTransaction;\n  }\n\n  async send(\n    tx: Transaction,\n    signers?: Array<Signer | undefined>,\n    opts?: ConfirmOptions\n  ): Promise<TransactionSignature> {\n    try {\n      const txSig = await super.send(tx, signers, opts);\n      this.onTransaction(txSig);\n      return txSig;\n    } catch (err) {\n      if (err instanceof Error || err === undefined) {\n        this.onTransaction(undefined, err);\n      }\n      return \"\";\n    }\n  }\n\n  async sendAll(\n    txs: Array<{ tx: Transaction; signers: Array<Signer | undefined> }>,\n    opts?: ConfirmOptions\n  ): Promise<Array<TransactionSignature>> {\n    try {\n      const txSigs = await super.sendAll(txs, opts);\n      txSigs.forEach((sig) => {\n        this.onTransaction(sig);\n      });\n      return txSigs;\n    } catch (err) {\n      if (err instanceof Error || err === undefined) {\n        this.onTransaction(undefined, err);\n      }\n      return [];\n    }\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}