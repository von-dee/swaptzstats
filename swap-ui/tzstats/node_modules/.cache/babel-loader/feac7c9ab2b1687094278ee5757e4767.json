{"ast":null,"code":"import _slicedToArray from\"/Users/selasie/Documents/GitHub/dex_ui/swap-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState}from\"react\";import{PublicKey}from\"@solana/web3.js\";import{makeStyles,Dialog,DialogTitle,DialogContent,TextField,List,ListItem,Typography}from\"@material-ui/core\";import{TokenIcon}from\"./Swap\";import{useSwappableTokens}from\"../context/TokenList\";import{useMediaQuery}from\"@material-ui/core\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var useStyles=makeStyles(function(theme){return{dialogContent:{padding:0},textField:{marginBottom:\"8px\",color:\"#fff\"},tab:{minWidth:\"134px\"},tabSelected:{color:theme.palette.grey[50],fontWeight:700,backgroundColor:theme.palette.primary.main,borderRadius:\"10px\"},tabIndicator:{opacity:0},input:{color:\"white !important\"}};});export default function TokenDialog(_ref){var open=_ref.open,onClose=_ref.onClose,setMint=_ref.setMint;var _useState=useState(0),_useState2=_slicedToArray(_useState,2),tabSelection=_useState2[0],setTabSelection=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),tokenFilter=_useState4[0],setTokenFilter=_useState4[1];var filter=tokenFilter.toLowerCase();var styles=useStyles();var _useSwappableTokens=useSwappableTokens(),swappableTokens=_useSwappableTokens.swappableTokens,swappableTokensSollet=_useSwappableTokens.swappableTokensSollet,swappableTokensWormhole=_useSwappableTokens.swappableTokensWormhole;var displayTabs=!useMediaQuery(\"(max-width:450px)\");var selectedTokens=tabSelection===0?swappableTokens:tabSelection===1?swappableTokensWormhole:swappableTokensSollet;var tokens=tokenFilter===\"\"?selectedTokens:selectedTokens.filter(function(t){return t.symbol.toLowerCase().startsWith(filter)||t.name.toLowerCase().startsWith(filter)||t.address.toLowerCase().startsWith(filter);});return/*#__PURE__*/_jsxs(Dialog,{open:open,onClose:onClose,scroll:\"paper\",PaperProps:{style:{borderRadius:\"10px\",background:\"#22242a\",color:\"white !important\",width:\"420px\"}},children:[/*#__PURE__*/_jsxs(DialogTitle,{style:{fontWeight:\"bold\"},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",style:{paddingBottom:\"16px\",color:\"white\"},children:\"Select a token\"}),/*#__PURE__*/_jsx(TextField,{className:styles.textField,InputProps:{classes:{input:styles.input}},placeholder:\"Search name\",value:tokenFilter,fullWidth:true,variant:\"outlined\",onChange:function onChange(e){return setTokenFilter(e.target.value);}})]}),/*#__PURE__*/_jsx(DialogContent,{className:styles.dialogContent,dividers:true,children:/*#__PURE__*/_jsx(List,{disablePadding:true,children:tokens.map(function(tokenInfo){return/*#__PURE__*/_jsx(TokenListItem,{tokenInfo:tokenInfo,onClick:function onClick(mint){setMint(mint);onClose();}},tokenInfo.address);})})})]});}function TokenListItem(_ref2){var tokenInfo=_ref2.tokenInfo,_onClick=_ref2.onClick;var mint=new PublicKey(tokenInfo.address);return/*#__PURE__*/_jsxs(ListItem,{button:true,onClick:function onClick(){return _onClick(mint);},style:{padding:\"10px 20px\"},children:[/*#__PURE__*/_jsx(TokenIcon,{mint:mint,style:{height:\"30px\",borderRadius:\"15px\",color:\"white\"}}),/*#__PURE__*/_jsx(TokenName,{tokenInfo:tokenInfo})]});}function TokenName(_ref3){var tokenInfo=_ref3.tokenInfo;return/*#__PURE__*/_jsxs(\"div\",{style:{marginLeft:\"16px\"},children:[/*#__PURE__*/_jsx(Typography,{style:{fontWeight:\"bold\",color:\"#fff\"},children:tokenInfo===null||tokenInfo===void 0?void 0:tokenInfo.symbol}),/*#__PURE__*/_jsx(Typography,{style:{fontSize:\"14px\",color:\"#999\"},children:tokenInfo===null||tokenInfo===void 0?void 0:tokenInfo.name})]});}","map":{"version":3,"sources":["/Users/selasie/Documents/GitHub/dex_ui/swap-ui/src/components/TokenDialog.tsx"],"names":["useState","PublicKey","makeStyles","Dialog","DialogTitle","DialogContent","TextField","List","ListItem","Typography","TokenIcon","useSwappableTokens","useMediaQuery","useStyles","theme","dialogContent","padding","textField","marginBottom","color","tab","minWidth","tabSelected","palette","grey","fontWeight","backgroundColor","primary","main","borderRadius","tabIndicator","opacity","input","TokenDialog","open","onClose","setMint","tabSelection","setTabSelection","tokenFilter","setTokenFilter","filter","toLowerCase","styles","swappableTokens","swappableTokensSollet","swappableTokensWormhole","displayTabs","selectedTokens","tokens","t","symbol","startsWith","name","address","style","background","width","paddingBottom","classes","e","target","value","map","tokenInfo","mint","TokenListItem","onClick","height","TokenName","marginLeft","fontSize"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport { PublicKey } from \"@solana/web3.js\";\nimport { TokenInfo } from \"@solana/spl-token-registry\";\nimport {\n  makeStyles,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  TextField,\n  List,\n  ListItem,\n  Typography,\n  Tabs,\n  Tab,\n} from \"@material-ui/core\";\nimport { TokenIcon } from \"./Swap\";\nimport { useSwappableTokens } from \"../context/TokenList\";\nimport { useMediaQuery } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  dialogContent: {\n    padding: 0,\n  },\n  textField: {\n    marginBottom: \"8px\",\n    color: \"#fff\",\n  },\n  tab: {\n    minWidth: \"134px\",\n  },\n  tabSelected: {\n    color: theme.palette.grey[50],\n    fontWeight: 700,\n    backgroundColor: theme.palette.primary.main,\n    borderRadius: \"10px\",\n  },\n  tabIndicator: {\n    opacity: 0,\n  },\n  input: {\n    color: \"white !important\"\n  },\n}));\n\nexport default function TokenDialog({\n  open,\n  onClose,\n  setMint,\n}: {\n  open: boolean;\n  onClose: () => void;\n  setMint: (mint: PublicKey) => void;\n}) {\n  const [tabSelection, setTabSelection] = useState(0);\n  const [tokenFilter, setTokenFilter] = useState(\"\");\n  const filter = tokenFilter.toLowerCase();\n  const styles = useStyles();\n  const { swappableTokens, swappableTokensSollet, swappableTokensWormhole } =\n    useSwappableTokens();\n  const displayTabs = !useMediaQuery(\"(max-width:450px)\");\n  const selectedTokens =\n    tabSelection === 0\n      ? swappableTokens\n      : tabSelection === 1\n      ? swappableTokensWormhole\n      : swappableTokensSollet;\n  let tokens =\n    tokenFilter === \"\"\n      ? selectedTokens\n      : selectedTokens.filter(\n          (t) =>\n            t.symbol.toLowerCase().startsWith(filter) ||\n            t.name.toLowerCase().startsWith(filter) ||\n            t.address.toLowerCase().startsWith(filter)\n        );\n\n\n  return (\n    <Dialog\n      open={open}\n      onClose={onClose}\n      scroll={\"paper\"}\n      PaperProps={{\n        style: {\n          borderRadius: \"10px\",\n          background: \"#22242a\",\n          color: \"white !important\",\n          width: \"420px\",\n        },\n      }}\n    >\n      <DialogTitle style={{ fontWeight: \"bold\" }}>\n        <Typography variant=\"h6\" style={{ paddingBottom: \"16px\", color: \"white\" }}>\n          Select a token\n        </Typography>\n        <TextField\n          className={styles.textField}\n          InputProps={{\n            classes: {\n              input: styles.input,\n            },\n          }}\n          placeholder={\"Search name\"}\n          value={tokenFilter}\n          fullWidth\n          variant=\"outlined\"\n          onChange={(e) => setTokenFilter(e.target.value)}\n        />\n      </DialogTitle>\n      <DialogContent className={styles.dialogContent} dividers={true}>\n        <List disablePadding>\n          {tokens.map((tokenInfo: TokenInfo) => (\n            <TokenListItem\n              key={tokenInfo.address}\n              tokenInfo={tokenInfo}\n              onClick={(mint) => {\n                setMint(mint);\n                onClose();\n              }}\n            />\n          ))}\n        </List>\n      </DialogContent>\n\n      {/* {displayTabs && (\n        <DialogActions>\n          <Tabs\n            value={tabSelection}\n            onChange={(e, v) => setTabSelection(v)}\n            classes={{\n              indicator: styles.tabIndicator,\n            }}\n          >\n            <Tab\n              value={0}\n              className={styles.tab}\n              classes={{ selected: styles.tabSelected }}\n              label=\"Main\"\n            />\n            <Tab\n              value={1}\n              className={styles.tab}\n              classes={{ selected: styles.tabSelected }}\n              label=\"Wormhole\"\n            />\n            <Tab\n              value={2}\n              className={styles.tab}\n              classes={{ selected: styles.tabSelected }}\n              label=\"Sollet\"\n            />\n          </Tabs>\n        </DialogActions>\n      )} */}\n      \n    </Dialog>\n  );\n}\n\nfunction TokenListItem({\n  tokenInfo,\n  onClick,\n}: {\n  tokenInfo: TokenInfo;\n  onClick: (mint: PublicKey) => void;\n}) {\n  const mint = new PublicKey(tokenInfo.address);\n  return (\n    <ListItem\n      button\n      onClick={() => onClick(mint)}\n      style={{ padding: \"10px 20px\" }}\n    >\n      <TokenIcon mint={mint} style={{ height: \"30px\", borderRadius: \"15px\", color: \"white\" }} />\n      <TokenName tokenInfo={tokenInfo} />\n    </ListItem>\n  );\n}\n\nfunction TokenName({ tokenInfo }: { tokenInfo: TokenInfo }) {\n  return (\n    <div style={{ marginLeft: \"16px\" }}>\n      <Typography style={{ fontWeight: \"bold\", color: \"#fff\" }}>\n        {tokenInfo?.symbol}\n      </Typography>\n      <Typography style={{ fontSize: \"14px\", color: \"#999\" }}>\n        {tokenInfo?.name}\n      </Typography>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}