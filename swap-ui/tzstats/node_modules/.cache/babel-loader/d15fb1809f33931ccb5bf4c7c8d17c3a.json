{"ast":null,"code":"import _slicedToArray from\"/Users/selasie/Documents/GitHub/dex_ui/swap-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectSpread from\"/Users/selasie/Documents/GitHub/dex_ui/swap-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{useState}from\"react\";import{makeStyles,Popover,IconButton,Typography,Button,TextField,InputAdornment,Switch,FormControlLabel,FormGroup}from\"@material-ui/core\";import{SettingsOutlined as Settings}from\"@material-ui/icons\";import PopupState,{bindTrigger,bindPopover}from\"material-ui-popup-state\";import{useSwapContext,useSwapFair}from\"../context/Swap\";import{useDexContext}from\"../context/Dex\";import OpenOrdersDialog from\"./OpenOrdersDialog\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var useStyles=makeStyles(function(theme){return{tab:{width:\"50%\"},table:{},settingsButton:{padding:0,color:theme.palette.grey[50]},closeAccountSwitchLabel:{color:theme.palette.text.secondary},fairAutoSelected:{backgroundColor:theme.palette.primary.main,padding:\"3px 5px\",borderRadius:\"10px\",color:theme.palette.grey[50],fontWeight:700},fairAuto:{backgroundColor:theme.palette.type===\"dark\"?theme.palette.grey[50]:theme.palette.grey[100],padding:\"3px 5px\",borderRadius:\"10px\",boxShadow:\"none\"},input:{color:\"#ccc !important\"}};});export function SettingsButton(){var styles=useStyles();return/*#__PURE__*/_jsx(PopupState,{variant:\"popover\",children://@ts-ignore\nfunction children(popupState){return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(IconButton,_objectSpread(_objectSpread({},bindTrigger(popupState)),{},{className:styles.settingsButton,children:/*#__PURE__*/_jsx(Settings,{fontSize:\"small\"})})),/*#__PURE__*/_jsx(Popover,_objectSpread(_objectSpread({},bindPopover(popupState)),{},{anchorOrigin:{vertical:\"bottom\",horizontal:\"left\"},transformOrigin:{vertical:\"top\",horizontal:\"right\"},PaperProps:{style:{borderRadius:\"10px\",boxShadow:\"0px 0px 30px 5px rgba(0,0,0,0.075)\"}},children:/*#__PURE__*/_jsx(SettingsDetails,{})}))]});}});}function SettingsDetails(){var styles=useStyles();var _useSwapContext=useSwapContext(),slippage=_useSwapContext.slippage,setSlippage=_useSwapContext.setSlippage,fairOverride=_useSwapContext.fairOverride,setFairOverride=_useSwapContext.setFairOverride;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),showSettingsDialog=_useState2[0],setShowSettingsDialog=_useState2[1];var fair=useSwapFair();var _useDexContext=useDexContext(),swapClient=_useDexContext.swapClient;var setSlippageHandler=function setSlippageHandler(value){setSlippage(!value||value<0?0:value);};return/*#__PURE__*/_jsxs(\"div\",{style:{padding:\"15px\",width:\"305px\",background:\"#22242a\"},children:[/*#__PURE__*/_jsx(Typography,{style:{fontWeight:\"bold\",color:\"white\"},children:\"Settings\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:\"10px\"},children:[/*#__PURE__*/_jsx(Typography,{style:{fontSize:\"12px\",color:\"white\"},children:\"Slippage tolerance\"}),/*#__PURE__*/_jsx(TextField,{type:\"number\",placeholder:\"Error tolerance percentage\",value:slippage,onChange:function onChange(e){return setSlippageHandler(parseFloat(e.target.value));},style:{display:\"flex\",justifyContent:\"center\",flexDirection:\"column\",color:\"#fff\"},InputProps:{endAdornment:/*#__PURE__*/_jsx(InputAdornment,{position:\"end\",children:\"%\"}),classes:{input:styles.input}}})]}),/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:\"10px\"},children:[/*#__PURE__*/_jsx(Typography,{style:{fontSize:\"12px\",color:\"white\"},children:\"Fair price\"}),/*#__PURE__*/_jsxs(\"div\",{style:{display:\"flex\"},children:[/*#__PURE__*/_jsx(TextField,{type:\"number\",placeholder:\"Fair price override\",value:fair,onChange:function onChange(e){return setFairOverride(parseFloat(e.target.value));},style:{marginRight:\"10px\",flex:1,display:\"flex\",justifyContent:\"center\",flexDirection:\"column\"},InputProps:{classes:{input:styles.input}},disabled:fairOverride===null}),/*#__PURE__*/_jsx(Button,{component:\"div\",variant:\"contained\",onClick:function onClick(){if(fair===undefined){console.error(\"Fair is undefined\");return;}if(fairOverride===null){setFairOverride(fair);}else{setFairOverride(null);}},className:fairOverride===null?styles.fairAutoSelected:styles.fairAuto,children:\"Auto\"})]})]}),/*#__PURE__*/_jsx(\"div\",{style:{margin:\"10px 0px\"},children:/*#__PURE__*/_jsx(CloseNewAccountsSwitch,{})}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",fullWidth:true,style:{color:\"#fff\"},disabled:swapClient.program.provider.wallet.publicKey===null,onClick:function onClick(){return setShowSettingsDialog(true);},children:\"Manage Dex Accounts\"})]}),/*#__PURE__*/_jsx(OpenOrdersDialog,{open:showSettingsDialog,onClose:function onClose(){return setShowSettingsDialog(false);}})]});}function CloseNewAccountsSwitch(){var styles=useStyles();var _useSwapContext2=useSwapContext(),isClosingNewAccounts=_useSwapContext2.isClosingNewAccounts,setIsClosingNewAccounts=_useSwapContext2.setIsClosingNewAccounts;return/*#__PURE__*/_jsx(FormGroup,{style:{display:\"none\"},row:true,children:/*#__PURE__*/_jsx(FormControlLabel,{classes:{label:styles.closeAccountSwitchLabel},labelPlacement:\"start\",style:{display:\"flex\",justifyContent:\"space-between\",marginLeft:0,width:\"100%\"},control:/*#__PURE__*/_jsx(Switch,{checked:isClosingNewAccounts,onChange:function onChange(){return setIsClosingNewAccounts(!isClosingNewAccounts);},color:\"primary\"}),label:\"Close new accounts\"})});}","map":{"version":3,"sources":["/Users/selasie/Documents/GitHub/dex_ui/swap-ui/src/components/Settings.tsx"],"names":["useState","makeStyles","Popover","IconButton","Typography","Button","TextField","InputAdornment","Switch","FormControlLabel","FormGroup","SettingsOutlined","Settings","PopupState","bindTrigger","bindPopover","useSwapContext","useSwapFair","useDexContext","OpenOrdersDialog","useStyles","theme","tab","width","table","settingsButton","padding","color","palette","grey","closeAccountSwitchLabel","text","secondary","fairAutoSelected","backgroundColor","primary","main","borderRadius","fontWeight","fairAuto","type","boxShadow","input","SettingsButton","styles","popupState","vertical","horizontal","style","SettingsDetails","slippage","setSlippage","fairOverride","setFairOverride","showSettingsDialog","setShowSettingsDialog","fair","swapClient","setSlippageHandler","value","background","marginTop","fontSize","e","parseFloat","target","display","justifyContent","flexDirection","endAdornment","classes","marginRight","flex","undefined","console","error","margin","program","provider","wallet","publicKey","CloseNewAccountsSwitch","isClosingNewAccounts","setIsClosingNewAccounts","label","marginLeft"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport {\n  makeStyles,\n  Popover,\n  IconButton,\n  Typography,\n  Button,\n  TextField,\n  InputAdornment,\n  Switch,\n  FormControlLabel,\n  FormGroup,\n} from \"@material-ui/core\";\nimport { SettingsOutlined as Settings } from \"@material-ui/icons\";\nimport PopupState, { bindTrigger, bindPopover } from \"material-ui-popup-state\";\nimport { useSwapContext, useSwapFair } from \"../context/Swap\";\nimport { useDexContext } from \"../context/Dex\";\nimport OpenOrdersDialog from \"./OpenOrdersDialog\";\n\nconst useStyles = makeStyles((theme) => ({\n  tab: {\n    width: \"50%\",\n  },\n  table: {},\n  settingsButton: {\n    padding: 0,\n    color: theme.palette.grey[50],\n  },\n  closeAccountSwitchLabel: {\n    color: theme.palette.text.secondary,\n  },\n  fairAutoSelected: {\n    backgroundColor: theme.palette.primary.main,\n    padding: \"3px 5px\",\n    borderRadius: \"10px\",\n    color: theme.palette.grey[50],\n    fontWeight: 700,\n  },\n  fairAuto: {\n    backgroundColor:\n      theme.palette.type === \"dark\"\n        ? theme.palette.grey[50]\n        : theme.palette.grey[100],\n    padding: \"3px 5px\",\n    borderRadius: \"10px\",\n    boxShadow: \"none\",\n  },\n  input: {\n    color: \"#ccc !important\"\n  },\n}));\n\nexport function SettingsButton() {\n  const styles = useStyles();\n\n  return (\n    <PopupState variant=\"popover\">\n      {\n        //@ts-ignore\n        (popupState) => (\n          <div>\n            <IconButton\n              {...bindTrigger(popupState)}\n              className={styles.settingsButton}\n            >\n              <Settings fontSize=\"small\" />\n            </IconButton>\n            <Popover\n              {...bindPopover(popupState)}\n              anchorOrigin={{\n                vertical: \"bottom\",\n                horizontal: \"left\",\n              }}\n              transformOrigin={{\n                vertical: \"top\",\n                horizontal: \"right\",\n              }}\n              PaperProps={{\n                style: {\n                  borderRadius: \"10px\",\n                  boxShadow: \"0px 0px 30px 5px rgba(0,0,0,0.075)\",\n                },\n              }}\n            >\n              <SettingsDetails />\n            </Popover>\n          </div>\n        )\n      }\n    </PopupState>\n  );\n}\n\nfunction SettingsDetails() {\n  const styles = useStyles();\n\n  const { slippage, setSlippage, fairOverride, setFairOverride } =\n    useSwapContext();\n  const [showSettingsDialog, setShowSettingsDialog] = useState(false);\n  const fair = useSwapFair();\n  const { swapClient } = useDexContext();\n\n  const setSlippageHandler = (value?: number) => {\n    setSlippage(!value || value < 0 ? 0 : value);\n  };\n\n  return (\n    <div style={{ padding: \"15px\", width: \"305px\", background: \"#22242a\" }}>\n      <Typography style={{ fontWeight: \"bold\", color: \"white\" }}>Settings</Typography>\n      <div>\n        <div style={{ marginTop: \"10px\" }}>\n          <Typography style={{ fontSize: \"12px\", color: \"white\" }}>\n            Slippage tolerance\n          </Typography>\n          <TextField\n            type=\"number\"\n            placeholder=\"Error tolerance percentage\"\n            value={slippage}\n            onChange={(e) => setSlippageHandler(parseFloat(e.target.value))}\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              flexDirection: \"column\",\n              color: \"#fff\"\n            }}\n            InputProps={{\n              endAdornment: <InputAdornment position=\"end\">%</InputAdornment>,\n              classes: {\n                input: styles.input,\n              }\n            }}\n          />\n        </div>\n        <div style={{ marginTop: \"10px\" }}>\n          <Typography style={{ fontSize: \"12px\", color: \"white\" }}>\n            Fair price\n          </Typography>\n          <div style={{ display: \"flex\" }}>\n            <TextField\n              type=\"number\"\n              placeholder=\"Fair price override\"\n              value={fair}\n              onChange={(e) => setFairOverride(parseFloat(e.target.value))}\n              style={{\n                marginRight: \"10px\",\n                flex: 1,\n                display: \"flex\",\n                justifyContent: \"center\",\n                flexDirection: \"column\",\n              }}\n              InputProps={{\n                classes: {\n                  input: styles.input,\n                }\n              }}\n              disabled={fairOverride === null}\n            />\n            <Button\n              component=\"div\"\n              variant=\"contained\"\n              onClick={() => {\n                if (fair === undefined) {\n                  console.error(\"Fair is undefined\");\n                  return;\n                }\n                if (fairOverride === null) {\n                  setFairOverride(fair);\n                } else {\n                  setFairOverride(null);\n                }\n              }}\n              className={\n                fairOverride === null\n                  ? styles.fairAutoSelected\n                  : styles.fairAuto\n              }\n            >\n              Auto\n            </Button>\n          </div>\n        </div>\n        <div style={{ margin: \"10px 0px\" }}>\n          <CloseNewAccountsSwitch />\n        </div>\n        <Button\n          variant=\"contained\"\n          fullWidth\n          style={{ color: \"#fff\" }}\n          \n          disabled={swapClient.program.provider.wallet.publicKey === null}\n          onClick={() => setShowSettingsDialog(true)}\n        >\n          Manage Dex Accounts\n        </Button>\n      </div>\n      <OpenOrdersDialog\n        open={showSettingsDialog}\n        onClose={() => setShowSettingsDialog(false)}\n      />\n    </div>\n  );\n}\n\nfunction CloseNewAccountsSwitch() {\n  const styles = useStyles();\n  const { isClosingNewAccounts, setIsClosingNewAccounts } = useSwapContext();\n\n  return (\n    <FormGroup style={{ display: \"none\" }} row>\n      <FormControlLabel\n        classes={{ label: styles.closeAccountSwitchLabel }}\n        labelPlacement=\"start\"\n        style={{\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          marginLeft: 0,\n          width: \"100%\",\n        }}\n        control={\n          <Switch\n            checked={isClosingNewAccounts}\n            onChange={() => setIsClosingNewAccounts(!isClosingNewAccounts)}\n            color=\"primary\"\n          />\n        }\n        label=\"Close new accounts\"\n      />\n    </FormGroup>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}