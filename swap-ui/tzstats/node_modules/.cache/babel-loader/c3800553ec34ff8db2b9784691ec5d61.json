{"ast":null,"code":"var _jsxFileName = \"/Users/selasie/Documents/GitHub/dex_ui/swap-ui/src/components/TokenDialog.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { PublicKey } from \"@solana/web3.js\";\nimport { makeStyles, Dialog, DialogTitle, DialogContent, DialogActions, TextField, List, ListItem, Typography, Tabs, Tab } from \"@material-ui/core\";\nimport { TokenIcon } from \"./Swap\";\nimport { useSwappableTokens } from \"../context/TokenList\";\nimport { useMediaQuery } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  dialogContent: {\n    padding: 0\n  },\n  textField: {\n    marginBottom: \"8px\"\n  },\n  tab: {\n    minWidth: \"134px\"\n  },\n  tabSelected: {\n    color: theme.palette.primary.contrastText,\n    fontWeight: 700,\n    backgroundColor: theme.palette.primary.main,\n    borderRadius: \"10px\"\n  },\n  tabIndicator: {\n    opacity: 0\n  }\n}));\nexport default function TokenDialog({\n  open,\n  onClose,\n  setMint\n}) {\n  _s();\n\n  const [tabSelection, setTabSelection] = useState(0);\n  const [tokenFilter, setTokenFilter] = useState(\"\");\n  const filter = tokenFilter.toLowerCase();\n  const styles = useStyles();\n  const {\n    swappableTokens,\n    swappableTokensSollet,\n    swappableTokensWormhole\n  } = useSwappableTokens();\n  const displayTabs = !useMediaQuery(\"(max-width:450px)\");\n  const selectedTokens = tabSelection === 0 ? swappableTokens : tabSelection === 1 ? swappableTokensWormhole : swappableTokensSollet;\n  let tokens = tokenFilter === \"\" ? selectedTokens : selectedTokens.filter(t => t.symbol.toLowerCase().startsWith(filter) || t.name.toLowerCase().startsWith(filter) || t.address.toLowerCase().startsWith(filter));\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: open,\n    onClose: onClose,\n    scroll: \"paper\",\n    PaperProps: {\n      style: {\n        borderRadius: \"10px\",\n        width: \"420px\"\n      }\n    },\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      style: {\n        fontWeight: \"bold\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        style: {\n          paddingBottom: \"16px\"\n        },\n        children: \"Select a token\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        className: styles.textField,\n        placeholder: \"Search name\",\n        value: tokenFilter,\n        fullWidth: true,\n        variant: \"outlined\",\n        onChange: e => setTokenFilter(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      className: styles.dialogContent,\n      dividers: true,\n      children: /*#__PURE__*/_jsxDEV(List, {\n        disablePadding: true,\n        children: tokens.map(tokenInfo => /*#__PURE__*/_jsxDEV(TokenListItem, {\n          tokenInfo: tokenInfo,\n          onClick: mint => {\n            setMint(mint);\n            onClose();\n          }\n        }, tokenInfo.address, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), displayTabs && /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: /*#__PURE__*/_jsxDEV(Tabs, {\n        value: tabSelection,\n        onChange: (e, v) => setTabSelection(v),\n        classes: {\n          indicator: styles.tabIndicator\n        },\n        children: [/*#__PURE__*/_jsxDEV(Tab, {\n          value: 0,\n          className: styles.tab,\n          classes: {\n            selected: styles.tabSelected\n          },\n          label: \"Main\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          value: 1,\n          className: styles.tab,\n          classes: {\n            selected: styles.tabSelected\n          },\n          label: \"Wormhole\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          value: 2,\n          className: styles.tab,\n          classes: {\n            selected: styles.tabSelected\n          },\n          label: \"Sollet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TokenDialog, \"dEaR4f8vPCARt1up3iXbgGCcIwo=\", false, function () {\n  return [useStyles, useSwappableTokens, useMediaQuery];\n});\n\n_c = TokenDialog;\n\nfunction TokenListItem({\n  tokenInfo,\n  onClick\n}) {\n  const mint = new PublicKey(tokenInfo.address);\n  return /*#__PURE__*/_jsxDEV(ListItem, {\n    button: true,\n    onClick: () => onClick(mint),\n    style: {\n      padding: \"10px 20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(TokenIcon, {\n      mint: mint,\n      style: {\n        width: \"30px\",\n        borderRadius: \"15px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TokenName, {\n      tokenInfo: tokenInfo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = TokenListItem;\n\nfunction TokenName({\n  tokenInfo\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginLeft: \"16px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      style: {\n        fontWeight: \"bold\"\n      },\n      children: tokenInfo === null || tokenInfo === void 0 ? void 0 : tokenInfo.symbol\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      color: \"textSecondary\",\n      style: {\n        fontSize: \"14px\"\n      },\n      children: tokenInfo === null || tokenInfo === void 0 ? void 0 : tokenInfo.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 168,\n    columnNumber: 5\n  }, this);\n}\n\n_c3 = TokenName;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"TokenDialog\");\n$RefreshReg$(_c2, \"TokenListItem\");\n$RefreshReg$(_c3, \"TokenName\");","map":{"version":3,"sources":["/Users/selasie/Documents/GitHub/dex_ui/swap-ui/src/components/TokenDialog.tsx"],"names":["useState","PublicKey","makeStyles","Dialog","DialogTitle","DialogContent","DialogActions","TextField","List","ListItem","Typography","Tabs","Tab","TokenIcon","useSwappableTokens","useMediaQuery","useStyles","theme","dialogContent","padding","textField","marginBottom","tab","minWidth","tabSelected","color","palette","primary","contrastText","fontWeight","backgroundColor","main","borderRadius","tabIndicator","opacity","TokenDialog","open","onClose","setMint","tabSelection","setTabSelection","tokenFilter","setTokenFilter","filter","toLowerCase","styles","swappableTokens","swappableTokensSollet","swappableTokensWormhole","displayTabs","selectedTokens","tokens","t","symbol","startsWith","name","address","style","width","paddingBottom","e","target","value","map","tokenInfo","mint","v","indicator","selected","TokenListItem","onClick","TokenName","marginLeft","fontSize"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport { PublicKey } from \"@solana/web3.js\";\nimport { TokenInfo } from \"@solana/spl-token-registry\";\nimport {\n  makeStyles,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  TextField,\n  List,\n  ListItem,\n  Typography,\n  Tabs,\n  Tab,\n} from \"@material-ui/core\";\nimport { TokenIcon } from \"./Swap\";\nimport { useSwappableTokens } from \"../context/TokenList\";\nimport { useMediaQuery } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  dialogContent: {\n    padding: 0,\n  },\n  textField: {\n    marginBottom: \"8px\",\n  },\n  tab: {\n    minWidth: \"134px\",\n  },\n  tabSelected: {\n    color: theme.palette.primary.contrastText,\n    fontWeight: 700,\n    backgroundColor: theme.palette.primary.main,\n    borderRadius: \"10px\",\n  },\n  tabIndicator: {\n    opacity: 0,\n  },\n}));\n\nexport default function TokenDialog({\n  open,\n  onClose,\n  setMint,\n}: {\n  open: boolean;\n  onClose: () => void;\n  setMint: (mint: PublicKey) => void;\n}) {\n  const [tabSelection, setTabSelection] = useState(0);\n  const [tokenFilter, setTokenFilter] = useState(\"\");\n  const filter = tokenFilter.toLowerCase();\n  const styles = useStyles();\n  const { swappableTokens, swappableTokensSollet, swappableTokensWormhole } =\n    useSwappableTokens();\n  const displayTabs = !useMediaQuery(\"(max-width:450px)\");\n  const selectedTokens =\n    tabSelection === 0\n      ? swappableTokens\n      : tabSelection === 1\n      ? swappableTokensWormhole\n      : swappableTokensSollet;\n  let tokens =\n    tokenFilter === \"\"\n      ? selectedTokens\n      : selectedTokens.filter(\n          (t) =>\n            t.symbol.toLowerCase().startsWith(filter) ||\n            t.name.toLowerCase().startsWith(filter) ||\n            t.address.toLowerCase().startsWith(filter)\n        );\n  return (\n    <Dialog\n      open={open}\n      onClose={onClose}\n      scroll={\"paper\"}\n      PaperProps={{\n        style: {\n          borderRadius: \"10px\",\n          width: \"420px\",\n        },\n      }}\n    >\n      <DialogTitle style={{ fontWeight: \"bold\" }}>\n        <Typography variant=\"h6\" style={{ paddingBottom: \"16px\" }}>\n          Select a token\n        </Typography>\n        <TextField\n          className={styles.textField}\n          placeholder={\"Search name\"}\n          value={tokenFilter}\n          fullWidth\n          variant=\"outlined\"\n          onChange={(e) => setTokenFilter(e.target.value)}\n        />\n      </DialogTitle>\n      <DialogContent className={styles.dialogContent} dividers={true}>\n        <List disablePadding>\n          {tokens.map((tokenInfo: TokenInfo) => (\n            <TokenListItem\n              key={tokenInfo.address}\n              tokenInfo={tokenInfo}\n              onClick={(mint) => {\n                setMint(mint);\n                onClose();\n              }}\n            />\n          ))}\n        </List>\n      </DialogContent>\n      {displayTabs && (\n        <DialogActions>\n          <Tabs\n            value={tabSelection}\n            onChange={(e, v) => setTabSelection(v)}\n            classes={{\n              indicator: styles.tabIndicator,\n            }}\n          >\n            <Tab\n              value={0}\n              className={styles.tab}\n              classes={{ selected: styles.tabSelected }}\n              label=\"Main\"\n            />\n            <Tab\n              value={1}\n              className={styles.tab}\n              classes={{ selected: styles.tabSelected }}\n              label=\"Wormhole\"\n            />\n            <Tab\n              value={2}\n              className={styles.tab}\n              classes={{ selected: styles.tabSelected }}\n              label=\"Sollet\"\n            />\n          </Tabs>\n        </DialogActions>\n      )}\n    </Dialog>\n  );\n}\n\nfunction TokenListItem({\n  tokenInfo,\n  onClick,\n}: {\n  tokenInfo: TokenInfo;\n  onClick: (mint: PublicKey) => void;\n}) {\n  const mint = new PublicKey(tokenInfo.address);\n  return (\n    <ListItem\n      button\n      onClick={() => onClick(mint)}\n      style={{ padding: \"10px 20px\" }}\n    >\n      <TokenIcon mint={mint} style={{ width: \"30px\", borderRadius: \"15px\" }} />\n      <TokenName tokenInfo={tokenInfo} />\n    </ListItem>\n  );\n}\n\nfunction TokenName({ tokenInfo }: { tokenInfo: TokenInfo }) {\n  return (\n    <div style={{ marginLeft: \"16px\" }}>\n      <Typography style={{ fontWeight: \"bold\" }}>\n        {tokenInfo?.symbol}\n      </Typography>\n      <Typography color=\"textSecondary\" style={{ fontSize: \"14px\" }}>\n        {tokenInfo?.name}\n      </Typography>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}