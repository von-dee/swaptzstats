{"ast":null,"code":"import{Swap as SwapClient}from\"@project-serum/swap\";import{createMuiTheme,ThemeProvider}from\"@material-ui/core/styles\";import{SwapContextProvider,useSwapContext,useSwapFair}from\"./context/Swap\";import{DexContextProvider,useBbo,useFairRoute,useMarketName}from\"./context/Dex\";import{TokenListContextProvider,useTokenMap}from\"./context/TokenList\";import{TokenContextProvider,useMint}from\"./context/Token\";import SwapCard,{ArrowButton,SwapButton,SwapHeader,SwapTokenForm}from\"./components/Swap\";import TokenDialog from\"./components/TokenDialog\";/**\n * A`Swap` component that can be embedded into applications. To use,\n * one can, minimally, provide a provider and token list to the component.\n * For example,\n *\n * ```javascript\n * <Swap provider={provider} tokenList={tokenList} />\n * ```\n *\n * All of the complexity of communicating with the Serum DEX and managing\n * its data is handled internally by the component.\n *\n * For information on other properties like earning referrals, see the\n * [[SwapProps]] documentation.\n */import{jsx as _jsx}from\"react/jsx-runtime\";export default function Swap(props){var containerStyle=props.containerStyle,contentStyle=props.contentStyle,swapTokenContainerStyle=props.swapTokenContainerStyle,materialTheme=props.materialTheme,provider=props.provider,tokenList=props.tokenList,fromMint=props.fromMint,toMint=props.toMint,fromAmount=props.fromAmount,toAmount=props.toAmount,referral=props.referral;// @ts-ignore\nvar swapClient=new SwapClient(provider,tokenList);var theme=createMuiTheme(materialTheme||{palette:{primary:{main:\"#2196F3\",contrastText:\"#FFFFFF\"},secondary:{main:\"#E0E0E0\",light:\"#595959\"},error:{main:\"#ff6b6b\"}}});return/*#__PURE__*/_jsx(ThemeProvider,{theme:theme,children:/*#__PURE__*/_jsx(TokenListContextProvider,{tokenList:tokenList,children:/*#__PURE__*/_jsx(TokenContextProvider,{provider:provider,children:/*#__PURE__*/_jsx(DexContextProvider,{swapClient:swapClient,children:/*#__PURE__*/_jsx(SwapContextProvider,{fromMint:fromMint,toMint:toMint,fromAmount:fromAmount,toAmount:toAmount,referral:referral,children:/*#__PURE__*/_jsx(SwapCard,{containerStyle:containerStyle,contentStyle:contentStyle,swapTokenContainerStyle:swapTokenContainerStyle})})})})})});}/**\n * Properties for the `Swap` Component.\n */export{// Components.\nSwap,SwapCard,SwapHeader,SwapTokenForm,ArrowButton,SwapButton,TokenDialog,// Providers and context.\n// Swap.\nSwapContextProvider,useSwapContext,useSwapFair,// TokenList.\nTokenListContextProvider,useTokenMap,// Token.\nTokenContextProvider,useMint,// Dex.\nDexContextProvider,useFairRoute,useMarketName,useBbo};","map":{"version":3,"sources":["/Users/selasie/Documents/GitHub/dex_ui/swap-ui/src/index.tsx"],"names":["Swap","SwapClient","createMuiTheme","ThemeProvider","SwapContextProvider","useSwapContext","useSwapFair","DexContextProvider","useBbo","useFairRoute","useMarketName","TokenListContextProvider","useTokenMap","TokenContextProvider","useMint","SwapCard","ArrowButton","SwapButton","SwapHeader","SwapTokenForm","TokenDialog","props","containerStyle","contentStyle","swapTokenContainerStyle","materialTheme","provider","tokenList","fromMint","toMint","fromAmount","toAmount","referral","swapClient","theme","palette","primary","main","contrastText","secondary","light","error"],"mappings":"AAIA,OAASA,IAAI,GAAIC,CAAAA,UAAjB,KAAmC,qBAAnC,CACA,OACEC,cADF,CAGEC,aAHF,KAIO,0BAJP,CAKA,OACEC,mBADF,CAEEC,cAFF,CAGEC,WAHF,KAIO,gBAJP,CAKA,OACEC,kBADF,CAEEC,MAFF,CAGEC,YAHF,CAIEC,aAJF,KAKO,eALP,CAMA,OAASC,wBAAT,CAAmCC,WAAnC,KAAsD,qBAAtD,CACA,OAASC,oBAAT,CAA+BC,OAA/B,KAA8C,iBAA9C,CACA,MAAOC,CAAAA,QAAP,EACEC,WADF,CAEEC,UAFF,CAGEC,UAHF,CAIEC,aAJF,KAKO,mBALP,CAMA,MAAOC,CAAAA,WAAP,KAAwB,0BAAxB,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,G,2CACA,cAAe,SAASpB,CAAAA,IAAT,CAAcqB,KAAd,CAA8C,CAC3D,GACEC,CAAAA,cADF,CAYID,KAZJ,CACEC,cADF,CAEEC,YAFF,CAYIF,KAZJ,CAEEE,YAFF,CAGEC,uBAHF,CAYIH,KAZJ,CAGEG,uBAHF,CAIEC,aAJF,CAYIJ,KAZJ,CAIEI,aAJF,CAKEC,QALF,CAYIL,KAZJ,CAKEK,QALF,CAMEC,SANF,CAYIN,KAZJ,CAMEM,SANF,CAOEC,QAPF,CAYIP,KAZJ,CAOEO,QAPF,CAQEC,MARF,CAYIR,KAZJ,CAQEQ,MARF,CASEC,UATF,CAYIT,KAZJ,CASES,UATF,CAUEC,QAVF,CAYIV,KAZJ,CAUEU,QAVF,CAWEC,QAXF,CAYIX,KAZJ,CAWEW,QAXF,CAcA;AACA,GAAMC,CAAAA,UAAU,CAAG,GAAIhC,CAAAA,UAAJ,CAAeyB,QAAf,CAAyBC,SAAzB,CAAnB,CACA,GAAMO,CAAAA,KAAK,CAAGhC,cAAc,CAC1BuB,aAAa,EAAI,CACfU,OAAO,CAAE,CACPC,OAAO,CAAE,CACPC,IAAI,CAAE,SADC,CAEPC,YAAY,CAAE,SAFP,CADF,CAKPC,SAAS,CAAE,CACTF,IAAI,CAAE,SADG,CAETG,KAAK,CAAE,SAFE,CALJ,CASPC,KAAK,CAAE,CACLJ,IAAI,CAAE,SADD,CATA,CADM,CADS,CAA5B,CAiBA,mBACE,KAAC,aAAD,EAAe,KAAK,CAAEH,KAAtB,uBACE,KAAC,wBAAD,EAA0B,SAAS,CAAEP,SAArC,uBACE,KAAC,oBAAD,EAAsB,QAAQ,CAAED,QAAhC,uBACE,KAAC,kBAAD,EAAoB,UAAU,CAAEO,UAAhC,uBACE,KAAC,mBAAD,EACE,QAAQ,CAAEL,QADZ,CAEE,MAAM,CAAEC,MAFV,CAGE,UAAU,CAAEC,UAHd,CAIE,QAAQ,CAAEC,QAJZ,CAKE,QAAQ,CAAEC,QALZ,uBAOE,KAAC,QAAD,EACE,cAAc,CAAEV,cADlB,CAEE,YAAY,CAAEC,YAFhB,CAGE,uBAAuB,CAAEC,uBAH3B,EAPF,EADF,EADF,EADF,EADF,EADF,CAuBD,CAED;AACA;AACA,GAgEA,OACE;AACAxB,IAFF,CAGEe,QAHF,CAIEG,UAJF,CAKEC,aALF,CAMEH,WANF,CAOEC,UAPF,CAQEG,WARF,CASE;AACA;AACAhB,mBAXF,CAYEC,cAZF,CAaEC,WAbF,CAcE;AACAK,wBAfF,CAgBEC,WAhBF,CAiBE;AACAC,oBAlBF,CAmBEC,OAnBF,CAoBE;AACAP,kBArBF,CAsBEE,YAtBF,CAuBEC,aAvBF,CAwBEF,MAxBF","sourcesContent":["import { ReactElement } from \"react\";\nimport { PublicKey } from \"@solana/web3.js\";\nimport { TokenListContainer } from \"@solana/spl-token-registry\";\nimport { Provider } from \"@project-serum/anchor\";\nimport { Swap as SwapClient } from \"@project-serum/swap\";\nimport {\n  createMuiTheme,\n  ThemeOptions,\n  ThemeProvider,\n} from \"@material-ui/core/styles\";\nimport {\n  SwapContextProvider,\n  useSwapContext,\n  useSwapFair,\n} from \"./context/Swap\";\nimport {\n  DexContextProvider,\n  useBbo,\n  useFairRoute,\n  useMarketName,\n} from \"./context/Dex\";\nimport { TokenListContextProvider, useTokenMap } from \"./context/TokenList\";\nimport { TokenContextProvider, useMint } from \"./context/Token\";\nimport SwapCard, {\n  ArrowButton,\n  SwapButton,\n  SwapHeader,\n  SwapTokenForm,\n} from \"./components/Swap\";\nimport TokenDialog from \"./components/TokenDialog\";\n\n/**\n * A`Swap` component that can be embedded into applications. To use,\n * one can, minimally, provide a provider and token list to the component.\n * For example,\n *\n * ```javascript\n * <Swap provider={provider} tokenList={tokenList} />\n * ```\n *\n * All of the complexity of communicating with the Serum DEX and managing\n * its data is handled internally by the component.\n *\n * For information on other properties like earning referrals, see the\n * [[SwapProps]] documentation.\n */\nexport default function Swap(props: SwapProps): ReactElement {\n  const {\n    containerStyle,\n    contentStyle,\n    swapTokenContainerStyle,\n    materialTheme,\n    provider,\n    tokenList,\n    fromMint,\n    toMint,\n    fromAmount,\n    toAmount,\n    referral,\n  } = props;\n\n  // @ts-ignore\n  const swapClient = new SwapClient(provider, tokenList);\n  const theme = createMuiTheme(\n    materialTheme || {\n      palette: {\n        primary: {\n          main: \"#2196F3\",\n          contrastText: \"#FFFFFF\",\n        },\n        secondary: {\n          main: \"#E0E0E0\",\n          light: \"#595959\",\n        },\n        error: {\n          main: \"#ff6b6b\",\n        },\n      },\n    }\n  );\n  return (\n    <ThemeProvider theme={theme}>\n      <TokenListContextProvider tokenList={tokenList}>\n        <TokenContextProvider provider={provider}>\n          <DexContextProvider swapClient={swapClient}>\n            <SwapContextProvider\n              fromMint={fromMint}\n              toMint={toMint}\n              fromAmount={fromAmount}\n              toAmount={toAmount}\n              referral={referral}\n            >\n              <SwapCard\n                containerStyle={containerStyle}\n                contentStyle={contentStyle}\n                swapTokenContainerStyle={swapTokenContainerStyle}\n              />\n            </SwapContextProvider>\n          </DexContextProvider>\n        </TokenContextProvider>\n      </TokenListContextProvider>\n    </ThemeProvider>\n  );\n}\n\n/**\n * Properties for the `Swap` Component.\n */\nexport type SwapProps = {\n  /**\n   * Wallet and network provider. Apps can use a `Provider` subclass to hook\n   * into all transactions intitiated by the component.\n   */\n  provider: Provider;\n\n  /**\n   * Token list providing information for tokens used.\n   */\n  tokenList: TokenListContainer;\n\n  /**\n   * Wallet address to which referral fees are sent (i.e. a SOL address).\n   * To receive referral fees, the wallet must *own* associated token\n   * accounts for the token in which the referral is paid  (usually USDC\n   * or USDT).\n   */\n  referral?: PublicKey;\n\n  /**\n   * The default `fromMint` to use when the component first renders.\n   */\n  fromMint?: PublicKey;\n\n  /**\n   * The default `toMint` to use when the component first renders.\n   */\n  toMint?: PublicKey;\n\n  /**\n   * The initial amount for the `fromMint` to use when the component first\n   * renders.\n   */\n  fromAmount?: number;\n\n  /**\n   * The initial amount for the `toMint` to use when the component first\n   * renders.\n   */\n  toAmount?: number;\n\n  /**\n   * Provide custom material-ui theme.\n   */\n  materialTheme?: ThemeOptions;\n\n  /**\n   * Styling properties for the main container.\n   */\n  containerStyle?: any;\n\n  /**\n   * Styling properties for the content container.\n   */\n  contentStyle?: any;\n\n  /**\n   * Styling properties for the from and to token containers.\n   */\n  swapTokenContainerStyle?: any;\n};\n\nexport {\n  // Components.\n  Swap,\n  SwapCard,\n  SwapHeader,\n  SwapTokenForm,\n  ArrowButton,\n  SwapButton,\n  TokenDialog,\n  // Providers and context.\n  // Swap.\n  SwapContextProvider,\n  useSwapContext,\n  useSwapFair,\n  // TokenList.\n  TokenListContextProvider,\n  useTokenMap,\n  // Token.\n  TokenContextProvider,\n  useMint,\n  // Dex.\n  DexContextProvider,\n  useFairRoute,\n  useMarketName,\n  useBbo,\n};\n"]},"metadata":{},"sourceType":"module"}