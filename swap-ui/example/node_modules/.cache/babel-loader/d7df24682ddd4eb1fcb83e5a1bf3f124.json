{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.IDL = void 0; // Idl for client generation.\n\nexports.IDL = {\n  version: '0.0.0',\n  name: 'swap',\n  instructions: [{\n    name: 'initAccount',\n    accounts: [{\n      name: 'openOrders',\n      isMut: true,\n      isSigner: false\n    }, {\n      name: 'authority',\n      isMut: false,\n      isSigner: true\n    }, {\n      name: 'market',\n      isMut: false,\n      isSigner: false\n    }, {\n      name: 'dexProgram',\n      isMut: false,\n      isSigner: false\n    }, {\n      name: 'rent',\n      isMut: false,\n      isSigner: false\n    }],\n    args: []\n  }, {\n    name: 'closeAccount',\n    accounts: [{\n      name: 'openOrders',\n      isMut: true,\n      isSigner: false\n    }, {\n      name: 'authority',\n      isMut: false,\n      isSigner: true\n    }, {\n      name: 'destination',\n      isMut: true,\n      isSigner: false\n    }, {\n      name: 'market',\n      isMut: false,\n      isSigner: false\n    }, {\n      name: 'dexProgram',\n      isMut: false,\n      isSigner: false\n    }],\n    args: []\n  }, {\n    name: 'swap',\n    accounts: [{\n      name: 'market',\n      accounts: [{\n        name: 'market',\n        isMut: true,\n        isSigner: false\n      }, {\n        name: 'openOrders',\n        isMut: true,\n        isSigner: false\n      }, {\n        name: 'requestQueue',\n        isMut: true,\n        isSigner: false\n      }, {\n        name: 'eventQueue',\n        isMut: true,\n        isSigner: false\n      }, {\n        name: 'bids',\n        isMut: true,\n        isSigner: false\n      }, {\n        name: 'asks',\n        isMut: true,\n        isSigner: false\n      }, {\n        name: 'orderPayerTokenAccount',\n        isMut: true,\n        isSigner: false\n      }, {\n        name: 'coinVault',\n        isMut: true,\n        isSigner: false\n      }, {\n        name: 'pcVault',\n        isMut: true,\n        isSigner: false\n      }, {\n        name: 'vaultSigner',\n        isMut: false,\n        isSigner: false\n      }, {\n        name: 'coinWallet',\n        isMut: true,\n        isSigner: false\n      }]\n    }, {\n      name: 'authority',\n      isMut: false,\n      isSigner: true\n    }, {\n      name: 'pcWallet',\n      isMut: true,\n      isSigner: false\n    }, {\n      name: 'dexProgram',\n      isMut: false,\n      isSigner: false\n    }, {\n      name: 'tokenProgram',\n      isMut: false,\n      isSigner: false\n    }, {\n      name: 'rent',\n      isMut: false,\n      isSigner: false\n    }],\n    args: [{\n      name: 'side',\n      type: {\n        defined: 'Side'\n      }\n    }, {\n      name: 'amount',\n      type: 'u64'\n    }, {\n      name: 'minExchangeRate',\n      type: {\n        defined: 'ExchangeRate'\n      }\n    }]\n  }, {\n    name: 'swapTransitive',\n    accounts: [{\n      name: 'from',\n      accounts: [{\n        name: 'market',\n        isMut: true,\n        isSigner: false\n      }, {\n        name: 'openOrders',\n        isMut: true,\n        isSigner: false\n      }, {\n        name: 'requestQueue',\n        isMut: true,\n        isSigner: false\n      }, {\n        name: 'eventQueue',\n        isMut: true,\n        isSigner: false\n      }, {\n        name: 'bids',\n        isMut: true,\n        isSigner: false\n      }, {\n        name: 'asks',\n        isMut: true,\n        isSigner: false\n      }, {\n        name: 'orderPayerTokenAccount',\n        isMut: true,\n        isSigner: false\n      }, {\n        name: 'coinVault',\n        isMut: true,\n        isSigner: false\n      }, {\n        name: 'pcVault',\n        isMut: true,\n        isSigner: false\n      }, {\n        name: 'vaultSigner',\n        isMut: false,\n        isSigner: false\n      }, {\n        name: 'coinWallet',\n        isMut: true,\n        isSigner: false\n      }]\n    }, {\n      name: 'to',\n      accounts: [{\n        name: 'market',\n        isMut: true,\n        isSigner: false\n      }, {\n        name: 'openOrders',\n        isMut: true,\n        isSigner: false\n      }, {\n        name: 'requestQueue',\n        isMut: true,\n        isSigner: false\n      }, {\n        name: 'eventQueue',\n        isMut: true,\n        isSigner: false\n      }, {\n        name: 'bids',\n        isMut: true,\n        isSigner: false\n      }, {\n        name: 'asks',\n        isMut: true,\n        isSigner: false\n      }, {\n        name: 'orderPayerTokenAccount',\n        isMut: true,\n        isSigner: false\n      }, {\n        name: 'coinVault',\n        isMut: true,\n        isSigner: false\n      }, {\n        name: 'pcVault',\n        isMut: true,\n        isSigner: false\n      }, {\n        name: 'vaultSigner',\n        isMut: false,\n        isSigner: false\n      }, {\n        name: 'coinWallet',\n        isMut: true,\n        isSigner: false\n      }]\n    }, {\n      name: 'authority',\n      isMut: false,\n      isSigner: true\n    }, {\n      name: 'pcWallet',\n      isMut: true,\n      isSigner: false\n    }, {\n      name: 'dexProgram',\n      isMut: false,\n      isSigner: false\n    }, {\n      name: 'tokenProgram',\n      isMut: false,\n      isSigner: false\n    }, {\n      name: 'rent',\n      isMut: false,\n      isSigner: false\n    }],\n    args: [{\n      name: 'amount',\n      type: 'u64'\n    }, {\n      name: 'minExchangeRate',\n      type: {\n        defined: 'ExchangeRate'\n      }\n    }]\n  }],\n  types: [{\n    name: 'Side',\n    type: {\n      kind: 'enum',\n      variants: [{\n        name: 'Bid'\n      }, {\n        name: 'Ask'\n      }]\n    }\n  }, {\n    name: 'ExchangeRate',\n    type: {\n      kind: 'struct',\n      fields: [{\n        name: 'rate',\n        type: 'u64'\n      }, {\n        name: 'fromDecimals',\n        type: 'u8'\n      }, {\n        name: 'quoteDecimals',\n        type: 'u8'\n      }, {\n        name: 'strict',\n        type: 'bool'\n      }]\n    }\n  }],\n  events: [{\n    name: 'DidSwap',\n    fields: [{\n      name: 'given_amount',\n      type: 'u64',\n      index: false\n    }, {\n      name: 'min_exchange_rate',\n      type: {\n        defined: 'ExchangeRate'\n      },\n      index: false\n    }, {\n      name: 'from_amount',\n      type: 'u64',\n      index: false\n    }, {\n      name: 'to_amount',\n      type: 'u64',\n      index: false\n    }, {\n      name: 'quote_amount',\n      type: 'u64',\n      index: false\n    }, {\n      name: 'spill_amount',\n      type: 'u64',\n      index: false\n    }, {\n      name: 'from_mint',\n      type: 'publicKey',\n      index: false\n    }, {\n      name: 'to_mint',\n      type: 'publicKey',\n      index: false\n    }, {\n      name: 'quote_mint',\n      type: 'publicKey',\n      index: false\n    }, {\n      name: 'authority',\n      type: 'publicKey',\n      index: false\n    }]\n  }],\n  errors: [{\n    code: 100,\n    name: 'SwapTokensCannotMatch',\n    msg: 'The tokens being swapped must have different mints'\n  }, {\n    code: 101,\n    name: 'SlippageExceeded',\n    msg: 'Slippage tolerance exceeded'\n  }, {\n    code: 102,\n    name: 'ZeroSwap',\n    msg: 'No tokens received when swapping'\n  }]\n};","map":{"version":3,"sources":["../src/idl.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IDL = void 0;\n// Idl for client generation.\nexports.IDL = {\n    version: '0.0.0',\n    name: 'swap',\n    instructions: [\n        {\n            name: 'initAccount',\n            accounts: [\n                {\n                    name: 'openOrders',\n                    isMut: true,\n                    isSigner: false,\n                },\n                {\n                    name: 'authority',\n                    isMut: false,\n                    isSigner: true,\n                },\n                {\n                    name: 'market',\n                    isMut: false,\n                    isSigner: false,\n                },\n                {\n                    name: 'dexProgram',\n                    isMut: false,\n                    isSigner: false,\n                },\n                {\n                    name: 'rent',\n                    isMut: false,\n                    isSigner: false,\n                },\n            ],\n            args: [],\n        },\n        {\n            name: 'closeAccount',\n            accounts: [\n                {\n                    name: 'openOrders',\n                    isMut: true,\n                    isSigner: false,\n                },\n                {\n                    name: 'authority',\n                    isMut: false,\n                    isSigner: true,\n                },\n                {\n                    name: 'destination',\n                    isMut: true,\n                    isSigner: false,\n                },\n                {\n                    name: 'market',\n                    isMut: false,\n                    isSigner: false,\n                },\n                {\n                    name: 'dexProgram',\n                    isMut: false,\n                    isSigner: false,\n                },\n            ],\n            args: [],\n        },\n        {\n            name: 'swap',\n            accounts: [\n                {\n                    name: 'market',\n                    accounts: [\n                        {\n                            name: 'market',\n                            isMut: true,\n                            isSigner: false,\n                        },\n                        {\n                            name: 'openOrders',\n                            isMut: true,\n                            isSigner: false,\n                        },\n                        {\n                            name: 'requestQueue',\n                            isMut: true,\n                            isSigner: false,\n                        },\n                        {\n                            name: 'eventQueue',\n                            isMut: true,\n                            isSigner: false,\n                        },\n                        {\n                            name: 'bids',\n                            isMut: true,\n                            isSigner: false,\n                        },\n                        {\n                            name: 'asks',\n                            isMut: true,\n                            isSigner: false,\n                        },\n                        {\n                            name: 'orderPayerTokenAccount',\n                            isMut: true,\n                            isSigner: false,\n                        },\n                        {\n                            name: 'coinVault',\n                            isMut: true,\n                            isSigner: false,\n                        },\n                        {\n                            name: 'pcVault',\n                            isMut: true,\n                            isSigner: false,\n                        },\n                        {\n                            name: 'vaultSigner',\n                            isMut: false,\n                            isSigner: false,\n                        },\n                        {\n                            name: 'coinWallet',\n                            isMut: true,\n                            isSigner: false,\n                        },\n                    ],\n                },\n                {\n                    name: 'authority',\n                    isMut: false,\n                    isSigner: true,\n                },\n                {\n                    name: 'pcWallet',\n                    isMut: true,\n                    isSigner: false,\n                },\n                {\n                    name: 'dexProgram',\n                    isMut: false,\n                    isSigner: false,\n                },\n                {\n                    name: 'tokenProgram',\n                    isMut: false,\n                    isSigner: false,\n                },\n                {\n                    name: 'rent',\n                    isMut: false,\n                    isSigner: false,\n                },\n            ],\n            args: [\n                {\n                    name: 'side',\n                    type: {\n                        defined: 'Side',\n                    },\n                },\n                {\n                    name: 'amount',\n                    type: 'u64',\n                },\n                {\n                    name: 'minExchangeRate',\n                    type: {\n                        defined: 'ExchangeRate',\n                    },\n                },\n            ],\n        },\n        {\n            name: 'swapTransitive',\n            accounts: [\n                {\n                    name: 'from',\n                    accounts: [\n                        {\n                            name: 'market',\n                            isMut: true,\n                            isSigner: false,\n                        },\n                        {\n                            name: 'openOrders',\n                            isMut: true,\n                            isSigner: false,\n                        },\n                        {\n                            name: 'requestQueue',\n                            isMut: true,\n                            isSigner: false,\n                        },\n                        {\n                            name: 'eventQueue',\n                            isMut: true,\n                            isSigner: false,\n                        },\n                        {\n                            name: 'bids',\n                            isMut: true,\n                            isSigner: false,\n                        },\n                        {\n                            name: 'asks',\n                            isMut: true,\n                            isSigner: false,\n                        },\n                        {\n                            name: 'orderPayerTokenAccount',\n                            isMut: true,\n                            isSigner: false,\n                        },\n                        {\n                            name: 'coinVault',\n                            isMut: true,\n                            isSigner: false,\n                        },\n                        {\n                            name: 'pcVault',\n                            isMut: true,\n                            isSigner: false,\n                        },\n                        {\n                            name: 'vaultSigner',\n                            isMut: false,\n                            isSigner: false,\n                        },\n                        {\n                            name: 'coinWallet',\n                            isMut: true,\n                            isSigner: false,\n                        },\n                    ],\n                },\n                {\n                    name: 'to',\n                    accounts: [\n                        {\n                            name: 'market',\n                            isMut: true,\n                            isSigner: false,\n                        },\n                        {\n                            name: 'openOrders',\n                            isMut: true,\n                            isSigner: false,\n                        },\n                        {\n                            name: 'requestQueue',\n                            isMut: true,\n                            isSigner: false,\n                        },\n                        {\n                            name: 'eventQueue',\n                            isMut: true,\n                            isSigner: false,\n                        },\n                        {\n                            name: 'bids',\n                            isMut: true,\n                            isSigner: false,\n                        },\n                        {\n                            name: 'asks',\n                            isMut: true,\n                            isSigner: false,\n                        },\n                        {\n                            name: 'orderPayerTokenAccount',\n                            isMut: true,\n                            isSigner: false,\n                        },\n                        {\n                            name: 'coinVault',\n                            isMut: true,\n                            isSigner: false,\n                        },\n                        {\n                            name: 'pcVault',\n                            isMut: true,\n                            isSigner: false,\n                        },\n                        {\n                            name: 'vaultSigner',\n                            isMut: false,\n                            isSigner: false,\n                        },\n                        {\n                            name: 'coinWallet',\n                            isMut: true,\n                            isSigner: false,\n                        },\n                    ],\n                },\n                {\n                    name: 'authority',\n                    isMut: false,\n                    isSigner: true,\n                },\n                {\n                    name: 'pcWallet',\n                    isMut: true,\n                    isSigner: false,\n                },\n                {\n                    name: 'dexProgram',\n                    isMut: false,\n                    isSigner: false,\n                },\n                {\n                    name: 'tokenProgram',\n                    isMut: false,\n                    isSigner: false,\n                },\n                {\n                    name: 'rent',\n                    isMut: false,\n                    isSigner: false,\n                },\n            ],\n            args: [\n                {\n                    name: 'amount',\n                    type: 'u64',\n                },\n                {\n                    name: 'minExchangeRate',\n                    type: {\n                        defined: 'ExchangeRate',\n                    },\n                },\n            ],\n        },\n    ],\n    types: [\n        {\n            name: 'Side',\n            type: {\n                kind: 'enum',\n                variants: [\n                    {\n                        name: 'Bid',\n                    },\n                    {\n                        name: 'Ask',\n                    },\n                ],\n            },\n        },\n        {\n            name: 'ExchangeRate',\n            type: {\n                kind: 'struct',\n                fields: [\n                    {\n                        name: 'rate',\n                        type: 'u64',\n                    },\n                    {\n                        name: 'fromDecimals',\n                        type: 'u8',\n                    },\n                    {\n                        name: 'quoteDecimals',\n                        type: 'u8',\n                    },\n                    {\n                        name: 'strict',\n                        type: 'bool',\n                    },\n                ],\n            },\n        },\n    ],\n    events: [\n        {\n            name: 'DidSwap',\n            fields: [\n                {\n                    name: 'given_amount',\n                    type: 'u64',\n                    index: false,\n                },\n                {\n                    name: 'min_exchange_rate',\n                    type: {\n                        defined: 'ExchangeRate',\n                    },\n                    index: false,\n                },\n                {\n                    name: 'from_amount',\n                    type: 'u64',\n                    index: false,\n                },\n                {\n                    name: 'to_amount',\n                    type: 'u64',\n                    index: false,\n                },\n                {\n                    name: 'quote_amount',\n                    type: 'u64',\n                    index: false,\n                },\n                {\n                    name: 'spill_amount',\n                    type: 'u64',\n                    index: false,\n                },\n                {\n                    name: 'from_mint',\n                    type: 'publicKey',\n                    index: false,\n                },\n                {\n                    name: 'to_mint',\n                    type: 'publicKey',\n                    index: false,\n                },\n                {\n                    name: 'quote_mint',\n                    type: 'publicKey',\n                    index: false,\n                },\n                {\n                    name: 'authority',\n                    type: 'publicKey',\n                    index: false,\n                },\n            ],\n        },\n    ],\n    errors: [\n        {\n            code: 100,\n            name: 'SwapTokensCannotMatch',\n            msg: 'The tokens being swapped must have different mints',\n        },\n        {\n            code: 101,\n            name: 'SlippageExceeded',\n            msg: 'Slippage tolerance exceeded',\n        },\n        {\n            code: 102,\n            name: 'ZeroSwap',\n            msg: 'No tokens received when swapping',\n        },\n    ],\n};\n//# sourceMappingURL=idl.js.map"]},"metadata":{},"sourceType":"script"}